<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.WebPages</name>
  </assembly>
  <members>
    <member name="T:System.Web.Helpers.AntiForgery">
      <summary>Verhindert, dass Malwareskripts gefälschte Seitenanforderungen übermitteln.</summary>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetHtml">
      <summary>Fügt einem Formular ein Authentifizierungstoken hinzu, um Schutz vor Anforderungsfälschungen zu bieten.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die den verschlüsselten Tokenwert in einem verborgenen HTML-Feld enthält.</returns>
      <exception cref="T:System.ArgumentException">Das aktuelle <see cref="T:System.Web.HttpContext" />-Objekt ist null.</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetHtml(System.Web.HttpContextBase,System.String,System.String,System.String)">
      <summary>Fügt einem Formular ein Authentifizierungstoken hinzu, um Schutz vor Anforderungsfälschungen und Benutzern die Möglichkeit zu bieten, Authentifizierungsdetails anzugeben.</summary>
      <returns>Gibt den verschlüsselten Tokenwert in einem verborgenen HTML-Feld zurück.</returns>
      <param name="httpContext">Die HTTP-Kontextdaten für eine Anforderung.</param>
      <param name="salt">Eine optionale Zeichenfolge zufälliger Zeichen (z. B. Z*7g1&amp;p4), die zum Hinzufügen von Komplexität zu der Verschlüsselung verwendet wird, um zusätzliche Sicherheit bereitzustellen.Der Standardwert ist null.</param>
      <param name="domain">Die Domäne einer Webanwendung, von der eine Anforderung übermittelt wird.</param>
      <param name="path">Der virtuelle Stammpfad einer Webanwendung, von der eine Anforderung übermittelt wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> ist null.</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetTokens(System.String,System.String@,System.String@)">
      <summary>Ruft die Suchtoken ab.</summary>
      <param name="oldCookieToken">Das vorherige Cookietoken.</param>
      <param name="newCookieToken">Das neue Cookietoken.</param>
      <param name="formToken">Die Form des Tokens.</param>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate">
      <summary>Überprüft, ob die Eingabedaten aus einem HTML-Formularfeld von dem Benutzer stammen, der die Daten übermittelt hat.</summary>
      <exception cref="T:System.ArgumentException">Der aktuelle <see cref="T:System.Web.HttpContext" />-Wert ist null.</exception>
      <exception cref="T:System.Web.Helpers.HttpAntiForgeryException">Das HTTP-Cookietoken, das eine gültige Anforderung begleitet, fehlt.– oder –Das Formulartoken fehlt.– oder –Der Formulartokenwert stimmt nicht mit dem Cookietokenwert überein.– oder –Der Formulartokenwert stimmt nicht mit dem Cookietokenwert überein.</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate(System.String,System.String)">
      <summary>Überprüft, ob die Eingabedaten aus einem HTML-Formularfeld von dem Benutzer stammen, der die Daten übermittelt hat.</summary>
      <param name="cookieToken">Der Cookietokenwert.</param>
      <param name="formToken">Die Tokenform.</param>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate(System.Web.HttpContextBase,System.String)">
      <summary>Überprüft, ob die Eingabedaten aus einem HTML-Formularfeld von dem Benutzer stammen, der die Daten übermittelt hat. Ermöglicht Aufrufern außerdem die Angabe weiterer Überprüfungsdetails.</summary>
      <param name="httpContext">Die HTTP-Kontextdaten für eine Anforderung.</param>
      <param name="salt">Eine optionale Zeichenfolge zufälliger Zeichen (z. B. Z*7g1&amp;p4), die zum Entschlüsseln eines von der <see cref="T:System.Web.Helpers.AntiForgery" />-Klasse erstellten Authentifizierungstokens verwendet werden.Der Standardwert ist null.</param>
      <exception cref="T:System.ArgumentException">Der aktuelle <see cref="T:System.Web.HttpContext" />-Wert ist null.</exception>
      <exception cref="T:System.Web.Helpers.HttpAntiForgeryException">Das HTTP-Cookietoken, das eine gültige Anforderung begleitet, fehlt.– oder –Das Formulartoken fehlt.– oder –Der Formulartokenwert stimmt nicht mit dem Cookietokenwert überein.– oder –Der Formulartokenwert stimmt nicht mit dem Cookietokenwert überein.– oder –Der bereitgestellte <paramref name="salt" />-Wert stimmt nicht mit dem <paramref name="salt" />-Wert überein, der zum Erstellen des Formulartokens verwendet wurde.</exception>
    </member>
    <member name="T:System.Web.Helpers.AntiForgeryConfig">
      <summary>Stellt programmgesteuerte Konfiguration für das Tokensystem für Fälschungssicherheit zur Verfügung.</summary>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.AdditionalDataProvider">
      <summary>Ruft einen Datenanbieter ab, der zusätzliche Daten bereitstellen kann, die in alle generierten Token eingegeben werden und die weitere Daten in eingehenden Token überprüfen können.</summary>
      <returns>Der Datenanbieter.</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.CookieName">
      <summary>Ruft den Namen des Cookies ab, das vom Fälschungssicherheitssystem verwendet wird, bzw. legt diesen fest.</summary>
      <returns>Der Name des Cookies.</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.RequireSsl">
      <summary>Ruft einen Wert ab, der angibt, ob das Fälschungssicherheitscookie SSL erfordert, damit es an den Server zurückgegeben werden kann, oder legt diesen Wert fest.</summary>
      <returns>true, wenn SSL für die Rückgabe des Fälschungssicherheitscookies an den Server erforderlich ist, andernfalls false. </returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.SuppressIdentityHeuristicChecks">
      <summary>Ruft einen Wert ab, der angibt, ob das Fälschungssicherheitssystem die Prüfung von Bedingungen überspringen soll, die auf einen Missbrauch des Systems hindeuten können, oder legt diesen Wert fest.</summary>
      <returns>true, wenn das Fälschungssicherheitssystem auf einen möglichen Missbrauch des Systems prüfen soll, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.SuppressXFrameOptionsHeader">
      <summary>Gibt an, ob die Generierung des X-Frame-Options-Headers unterdrückt werden soll, der zum Verhindern von ClickJacking dient.Standardmäßig wird der X-Frame-Options-Header mit dem Wert SAMEORIGIN generiert.Wenn diese Einstellung "true" ist, wird der X-Frame-Options-Header für die Antwort nicht generiert.</summary>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.UniqueClaimTypeIdentifier">
      <summary>Ruft den Anspruchstyp aus der Identität ab, die zum eindeutigen Identifizieren des Benutzers verwendet wird, wenn anspruchsbasierte Autorisierung verwendet wird, oder legt diesen fest.</summary>
      <returns>Der Anspruchstyp.</returns>
    </member>
    <member name="T:System.Web.Helpers.IAntiForgeryAdditionalDataProvider">
      <summary>Ermöglicht das Einschließen oder Überprüfen von benutzerdefinierten Daten für Fälschungssicherheitstoken.</summary>
    </member>
    <member name="M:System.Web.Helpers.IAntiForgeryAdditionalDataProvider.GetAdditionalData(System.Web.HttpContextBase)">
      <summary>Stellt zusätzliche Daten zum Speichern für die Fälschungssicherheitstoken zur Verfügung, die während dieser Anforderung generiert werden.</summary>
      <returns>Die ergänzenden Daten, die in das Fälschungssicherheitstoken eingebettet werden sollen.</returns>
      <param name="context">Informationen zur aktuellen Anforderung.</param>
    </member>
    <member name="M:System.Web.Helpers.IAntiForgeryAdditionalDataProvider.ValidateAdditionalData(System.Web.HttpContextBase,System.String)">
      <summary>Überprüft zusätzliche Daten, die in ein eingehendes Fälschungssicherheitstoken eingebettet waren.</summary>
      <returns>true, wenn die Daten gültig sind, false, wenn die Daten ungültig sind.</returns>
      <param name="context">Informationen zur aktuellen Anforderung.</param>
      <param name="additionalData">Die ergänzenden Daten, die im Token eingebettet waren.</param>
    </member>
    <member name="T:System.Web.Helpers.UnvalidatedRequestValues">
      <summary>Stellt Zugriff auf nicht überprüfte Formularwerte im <see cref="T:System.Web.HttpRequest" />-Objekt zur Verfügung.</summary>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.Form">
      <summary>Ruft eine Auflistung nicht überprüfter Formularwerte ab, die über den Browser bereitgestellt wurden.</summary>
      <returns>Eine nicht überprüfte Auflistung von Formularwerten.</returns>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.Item(System.String)">
      <summary>Ruft das angegebene nicht überprüfte Objekt aus der Auflistung bereitgestellter Werte im <see cref="T:System.Web.HttpRequest" />-Objekt ab.</summary>
      <returns>Das angegebene Element oder null, wenn das angegebene Element nicht gefunden wurde.</returns>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.QueryString">
      <summary>Ruft eine Auflistung nicht überprüfter Abfragezeichenfolgenwerte ab.</summary>
      <returns>Eine Auflistung nicht überprüfter Abfragezeichenfolgenwerte.</returns>
    </member>
    <member name="T:System.Web.Helpers.Validation">
      <summary>Schließt Felder des Anforderungsobjekts aus der Überprüfung auf potenziell unsicheres HTML-Markup und Clientskript aus.</summary>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequest)">
      <summary>Gibt eine Version der Formularwerte, Cookies und Abfragezeichenfolgen-Variablen zurück, ohne diese zuvor auf HTML-Markup und Clientskript zu überprüfen.</summary>
      <returns>Ein Objekt, das nicht überprüfte Versionen der Formular- und Abfragezeichenfolgen-Werte enthält.</returns>
      <param name="request">Das <see cref="T:System.Web.HttpRequest" />-Objekt, das Werte enthält, die aus der Anforderungsüberprüfung ausgeschlossen werden sollen.</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequest,System.String)">
      <summary>Gibt einen Wert aus dem angegebenen Formularfeld, Cookie oder der Abfragezeichenfolgen-Variablen zurück, ohne diese Elemente zuvor auf HTML-Markup und Clientskript überprüft zu haben.</summary>
      <returns>Eine Zeichenfolge, nicht nicht überprüften Text aus dem angegebenen Feld, Cookie oder Abfragezeichenfolgen-Wert enthält.</returns>
      <param name="request">Das <see cref="T:System.Web.HttpRequest" />-Objekt, das Werte enthält, die aus der Überprüfung ausgeschlossen werden sollen.</param>
      <param name="key">Der Name des Felds, das aus der Überprüfung ausgeschlossen werden soll.<paramref name="key" /> kann sich auf ein Formularfeld, ein Cookie oder auf die Abfragezeichenfolgen-Variable beziehen.</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequestBase)">
      <summary>Gibt alle Werte aus dem Anforderungsobjekt (Formularfelder, Cookies und die Abfragezeichenfolge) zurück, ohne diese Elemente zuvor auf HTML-Markup und Clientskript überprüft zu haben.</summary>
      <returns>Ein Objekt, das nicht überprüfte Versionen der Formular-, Cookie- und Abfragezeichenfolgen-Werte enthält.</returns>
      <param name="request">Das <see cref="T:System.Web.HttpRequest" />-Objekt, das Werte enthält, die aus der Überprüfung ausgeschlossen werden sollen.</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequestBase,System.String)">
      <summary>Gibt den angegebenen Wert aus dem Anforderungsobjekt zurück, ohne ihn zuvor auf HTML-Markup und Clientskript überprüft zu haben.</summary>
      <returns>Eine Zeichenfolge, nicht nicht überprüften Text aus dem angegebenen Feld, Cookie oder Abfragezeichenfolgen-Wert enthält.</returns>
      <param name="request">Das <see cref="T:System.Web.HttpRequestBase" />-Objekt, das Werte enthält, die aus der Überprüfung ausgeschlossen werden sollen.</param>
      <param name="key">Der Name des Felds, das aus der Überprüfung ausgeschlossen werden soll.<paramref name="key" /> kann sich auf ein Formularfeld, ein Cookie oder auf die Abfragezeichenfolgen-Variable beziehen.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpAntiForgeryException">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor">
      <summary>Dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpAntiForgeryException" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String)">
      <summary>Dieses Element unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpAntiForgeryException" />-Klasse.</summary>
      <param name="message">Die enthaltende Nachricht.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String,System.Exception)">
      <summary>Dieses Element unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpAntiForgeryException" />-Klasse.</summary>
      <param name="message">Die Nachricht.</param>
      <param name="innerException">Die innere Ausnahme.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationEqualToRule">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationEqualToRule.#ctor(System.String,System.Object)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
      <param name="other">Weitere Angaben.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationMaxLengthRule"></member>
    <member name="M:System.Web.Mvc.ModelClientValidationMaxLengthRule.#ctor(System.String,System.Int32)"></member>
    <member name="T:System.Web.Mvc.ModelClientValidationMinLengthRule"></member>
    <member name="M:System.Web.Mvc.ModelClientValidationMinLengthRule.#ctor(System.String,System.Int32)"></member>
    <member name="T:System.Web.Mvc.ModelClientValidationRangeRule">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRangeRule.#ctor(System.String,System.Object,System.Object)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
      <param name="minValue">Der minimale Wert.</param>
      <param name="maxValue">Der maximale Wert.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRegexRule">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRegexRule.#ctor(System.String,System.String)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden. Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelClientValidationRegexRule" />-Klasse.</summary>
      <param name="errorMessage">Die Ausnahmemeldung.</param>
      <param name="pattern">Das Muster.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRemoteRule">
      <summary>Stellt die Remoteregel für die Überprüfung des Modellclients dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRemoteRule.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelClientValidationRemoteRule" />-Klasse.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
      <param name="url">Die URL der Regel.</param>
      <param name="httpMethod">Die HTTP-Methode.</param>
      <param name="additionalFields">Der weiteren Felder, die verwendet werden.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRequiredRule">
      <summary>Stellt die erforderliche Regel für die Überprüfung des Modellclients dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRequiredRule.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelClientValidationRequiredRule" />-Klasse.</summary>
      <param name="errorMessage">Die Fehlermeldung. </param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRule">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRule.#ctor">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ErrorMessage">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationParameters">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationType">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationStringLengthRule">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Stellt die Länge der Überprüfungsregel für den Modellclient dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationStringLengthRule.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelClientValidationStringLengthRule" />-Klasse.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
      <param name="minimumLength">Die minimale Länge der Überprüfungsregel.</param>
      <param name="maximumLength">Die maximale Länge der Überprüfungsregel.</param>
    </member>
    <member name="T:System.Web.Mvc.TagBuilder">
      <summary>Enthält Klassen und Eigenschaften, die zum Erstellen von HTML-Elementen verwendet werden.Diese Klasse wird zum Schreiben von Hilfsprogrammen verwendet, die z. B. im Namespace <see cref="N:System.Web.Helpers" /> gespeichert sind.</summary>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.#ctor(System.String)">
      <summary>Erstellt ein neues Tag mit dem angegebenen Tagnamen.</summary>
      <param name="tagName">Der Tagname ohne die Trennzeichen "&lt;", "/" oder "&gt;".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tagName" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.AddCssClass(System.String)">
      <summary>Fügt der Liste der CSS-Klassen im Tag eine CSS-Klasse hinzu.</summary>
      <param name="value">Die hinzuzufügende CSS-Klasse.</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.Attributes">
      <summary>Ruft die Auflistung der Attribute ab.</summary>
      <returns>Die Auflistung der Attribute.</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.CreateSanitizedId(System.String)">
      <summary>Ersetzt jedes ungültige Zeichen in der Tag-ID durch ein gültiges HTML-Zeichen.</summary>
      <returns>Die sichere Tag-ID oder null, wenn <paramref name="originalId" /> den Wert null besitzt oder leer ist oder <paramref name="originalId" /> nicht mit einem Buchstaben beginnt.</returns>
      <param name="originalId">Die ID, die ggf. zu ersetzende Zeichen enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.CreateSanitizedId(System.String,System.String)">
      <summary>Ersetzt jedes ungültige Zeichen in der Tag-ID durch die angegebene Ersetzungszeichenfolge.</summary>
      <returns>Die sichere Tag-ID oder null, wenn <paramref name="originalId" /> den Wert null besitzt oder leer ist oder <paramref name="originalId" /> nicht mit einem Buchstaben beginnt.</returns>
      <param name="originalId">Die ID, die ggf. zu ersetzende Zeichen enthält.</param>
      <param name="invalidCharReplacement">Die Ersetzungszeichenfolge.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="invalidCharReplacement" /> ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.GenerateId(System.String)">
      <summary>Generiert mithilfe des angegebenen Namens ein sicheres Attribut ID für das Tag.</summary>
      <param name="name">Der Name, der zum Generieren eines Attributs ID verwendet werden soll.</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.IdAttributeDotReplacement">
      <summary>Ruft eine Zeichenfolge ab, die zum Ersetzen ungültiger HTML-Zeichen verwendet werden kann, oder legt diese fest.</summary>
      <returns>Die Zeichenfolge, die zum Ersetzen ungültiger HTML-Zeichen verwendet werden soll.</returns>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.InnerHtml">
      <summary>Ruft den inneren HTML-Wert für das Element ab oder legt diesen fest.</summary>
      <returns>Der innere HTML-Wert für das Element.</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttribute(System.String,System.String)">
      <summary>Fügt dem Tag ein neues Attribut hinzu.</summary>
      <param name="key">Der Schlüssel für das Attribut.</param>
      <param name="value">Der Wert des Attributs.</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttribute(System.String,System.String,System.Boolean)">
      <summary>Fügt ein neues Attribut hinzu oder ersetzt optional ein vorhandenes Attribut im öffnenden Tag.</summary>
      <param name="key">Der Schlüssel für das Attribut.</param>
      <param name="value">Der Wert des Attributs.</param>
      <param name="replaceExisting">true, um ein vorhandenes Attribut zu ersetzen, wenn ein Attribut mit dem angegebenen Wert <paramref name="key" /> vorhanden ist, oder false, um das ursprüngliche Attribut unverändert zu lassen.</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1})">
      <summary>Fügt dem Tag neue Attribute hinzu.</summary>
      <param name="attributes">Die Auflistung der hinzuzufügenden Attribute.</param>
      <typeparam name="TKey">Der Typ des Schlüsselobjekts.</typeparam>
      <typeparam name="TValue">Der Typ des Wertobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
      <summary>Fügt neue Attribute hinzu oder ersetzt vorhandene Attribute im Tag.</summary>
      <param name="attributes">Die Auflistung der hinzuzufügenden oder zu ersetzenden Attribute.</param>
      <param name="replaceExisting">Für alle Attribute in <paramref name="attributes" />: true, um das Attribut zu ersetzen, wenn ein Attribut mit dem gleichen Schlüssel bereits vorhanden ist, oder false, um das ursprüngliche Attribut unverändert zu lassen.</param>
      <typeparam name="TKey">Der Typ des Schlüsselobjekts.</typeparam>
      <typeparam name="TValue">Der Typ des Wertobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.SetInnerText(System.String)">
      <summary>Legt die Eigenschaft <see cref="P:System.Web.Mvc.TagBuilder.InnerHtml" /> des Elements auf eine HTML-codierte Version der angegebenen Zeichenfolge fest.</summary>
      <param name="innerText">Die Zeichenfolge, die HTML-codiert werden soll.</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.TagName">
      <summary>Ruft den Tagnamen für dieses Tag ab.</summary>
      <returns>Der Name.</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.ToString">
      <summary>Rendert das Element als ein <see cref="F:System.Web.Mvc.TagRenderMode.Normal" />-Element.</summary>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.ToString(System.Web.Mvc.TagRenderMode)">
      <summary>Rendert das HTML-Tag mithilfe des angegebenen Renderingmodus.</summary>
      <returns>Da gerenderte HTML-Tag.</returns>
      <param name="renderMode">Der Renderingmodus.</param>
    </member>
    <member name="T:System.Web.Mvc.TagRenderMode">
      <summary>Zählt die Modi auf, die zum Rendern von HTML-Tags verfügbar sind.</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.EndTag">
      <summary>Stellt die Modi zum Rendern eines schließenden Tags dar (Beispiel: &lt;/tag&gt;).</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.Normal">
      <summary>Stellt die Modi zum Rendern normalen Texts dar.</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.SelfClosing">
      <summary>Stellt den Modus zum Rendern eines selbstschließenden Tags dar (Beispiel: &lt;tag /&gt;).</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.StartTag">
      <summary>Stellt die Modi zum Rendern eines öffnenden Tags dar (Beispiel: &lt;tag&gt;).</summary>
    </member>
    <member name="T:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator.GetValidationAttributes(System.Collections.Generic.IEnumerable{System.Web.Mvc.ModelClientValidationRule},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft die Überprüfungsattribute aus der Struktur oder dem Inhalt von <see cref="T:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator" /> ab.</summary>
      <param name="clientRules">Das zu implementierende <see cref="T:System.Web.Mvc.ModelClientValidationRule" />-Objekt.</param>
      <param name="results">Das Ergebnis der Überprüfung.</param>
    </member>
    <member name="T:System.Web.WebPages.ApplicationPart">
      <summary>Enthält Methoden zum Registrieren von Assemblys als Anwendungsparts.</summary>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.#ctor(System.Reflection.Assembly,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.ApplicationPart" />-Klasse mithilfe der angegebenen Assembly und dem virtuellen Stammpfad.</summary>
      <param name="assembly">Die Assembly.</param>
      <param name="rootVirtualPath">Der virtuelle Stammpfad.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rootVirtualPath" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.ProcessVirtualPath(System.Reflection.Assembly,System.String,System.String)">
      <summary>Löst einen Pfad mithilfe des angegebenen virtuellen Basispfads und des angegebenen virtuellen Pfads in die angegebene Assembly oder Ressource in einer Assembly auf.</summary>
      <returns>Der Pfad der Assembly oder Ressource.</returns>
      <param name="assembly">Die Assembly.</param>
      <param name="baseVirtualPath">Der virtuelle Basispfad.</param>
      <param name="virtualPath">Der virtuelle Pfad.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="assembly" /> ist nicht registriert.</exception>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.Register(System.Web.WebPages.ApplicationPart)">
      <summary>Fügt eine Assembly und alle Webseiten in der Assembly der Liste der verfügbaren Anwendungsparts hinzu.</summary>
      <param name="applicationPart">Das Anwendungspart.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="applicationPart" /> ist bereits registriert.</exception>
    </member>
    <member name="T:System.Web.WebPages.ApplicationStartPage">
      <summary>Stellt Objekte und Methoden zur Verfügung, die zum Ausführen und Rendern von ASP.NET Web Pages-Anwendungsstartseiten (Dateien _AppStart.cshtml oder _AppStart.vbhtml) verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.ApplicationStartPage" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Application">
      <summary>Ruft das HTTP-Anwendungsobjekt ab, das auf diese Anwendungsstartseite verweist.</summary>
      <returns>Das HTTP-Anwendungsobjekt, das auf diese Anwendungsstartseite verweist.</returns>
    </member>
    <member name="F:System.Web.WebPages.ApplicationStartPage.CacheKeyPrefix">
      <summary>Das Präfix, das auf alle Schlüssel angewendet wird, die dem Cache durch die Anwendungsstartseite hinzugefügt werden.</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Context">
      <summary>Ruft das <see cref="T:System.Web.HttpContextBase" />-Objekt ab, das Kontextdaten darstellt, die dieser Seite zugeordnet sind.</summary>
      <returns>Die aktuellen Kontextdaten.</returns>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.GetOutputWriter">
      <summary>Gibt die Textwriterinstanz zurück, die zum Rendern der Seite verwendet wird.</summary>
      <returns>Der Textwriter.</returns>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Markup">
      <summary>Ruft die Ausgabe aus der Anwendungsstartseite als eine HTML-codierte Zeichenfolge ab.</summary>
      <returns>Die Ausgabe aus der Anwendungsstartseite als eine HTML-codierte Zeichenfolge.</returns>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Output">
      <summary>Ruft den Textwriter für die Seite ab.</summary>
      <returns>Der Textwriter für die Seite.</returns>
    </member>
    <member name="F:System.Web.WebPages.ApplicationStartPage.StartPageVirtualPath">
      <summary>Der Pfad zur Anwendungsstartseite.</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.VirtualPath">
      <summary>Ruft den virtuellen Pfad der Seite ab oder legt diesen fest.</summary>
      <returns>Der virtuelle Pfad.</returns>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.Write(System.Object)">
      <summary>Schreibt die Zeichenfolgendarstellung des angegebenen Objekts als HTML-codierte Zeichenfolge.</summary>
      <param name="value">Das Objekt, das codiert und geschrieben werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.Write(System.Web.WebPages.HelperResult)">
      <summary>Schreibt das angegebene <see cref="T:System.Web.WebPages.HelperResult" />-Objekt als HTML-codierte Zeichenfolge.</summary>
      <param name="result">Das Hilfsprogrammergebnis, das codiert und geschrieben werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.WriteLiteral(System.Object)">
      <summary>Schreibt das angegebene Objekt ohne HTML-Codierung.</summary>
      <param name="value">Das zu schreibende Objekt.</param>
    </member>
    <member name="T:System.Web.WebPages.AttributeValue">
      <summary>Speichert den Wert für ein Attribut.Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.#ctor(System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.Object},System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.AttributeValue" />-Klasse.Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
      <param name="prefix">Das Namespacepräfix für das Attribut.</param>
      <param name="value">Der Wert für das Attribut.</param>
      <param name="literal">true, um anzugeben, dass der Wert ein Literalwert ist, andernfalls false.</param>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.FromTuple(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.Object,System.Int32},System.Boolean})">
      <summary>Erstellt einen Attributwert aus dem angegebenen Tupel-Objekt.</summary>
      <returns>Der erstellte Attributwert.</returns>
      <param name="value">Das Tupel-Objekt, aus dem erstellt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.FromTuple(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.String,System.Int32},System.Boolean})">
      <summary>Erstellt einen Attributwert aus dem angegebenen Tupel-Objekt.</summary>
      <returns>Der erstellte Attributwert.</returns>
      <param name="value">Das Tupel-Objekt, aus dem erstellt werden soll.</param>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Literal">
      <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob der Wert ein Literalwert ist.Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
      <returns>true, wenn der Wert ein Literalwert ist, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.op_Implicit(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.Object,System.Int32},System.Boolean})~System.Web.WebPages.AttributeValue">
      <summary>Erstellt einen Attributwert aus dem angegebenen Tupel-Objekt.</summary>
      <returns>Der erstellte Attributwert.</returns>
      <param name="value">Das Tupel-Objekt, aus dem erstellt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.op_Implicit(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.String,System.Int32},System.Boolean})~System.Web.WebPages.AttributeValue">
      <summary>Erstellt einen Attributwert aus dem angegebenen Tupel-Objekt.</summary>
      <returns>Der erstellte Attributwert.</returns>
      <param name="value">Das Tupel-Objekt, aus dem erstellt werden soll.</param>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Prefix">
      <summary>Ruft das Namespacepräfix für das Attribut ab bzw. legt es fest.Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
      <returns>Das Namespacepräfix für das Attribut.</returns>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Value">
      <summary>Ruft den Wert für das Attribut ab bzw. legt ihn fest.Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
      <returns>Der Wert für das Attribut.</returns>
    </member>
    <member name="T:System.Web.WebPages.BrowserHelpers">
      <summary>Bietet eine Möglichkeit zum Angeben benutzerdefinierter Browserinformationen (Benutzer-Agent).</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.ClearOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>Entfernt alle außer Kraft gesetzten Benutzer-Agents für die aktuelle Anforderung.</summary>
      <param name="httpContext">Der aktuelle Kontext.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>Gibt das Browserfunktionenobjekt für die außer Kraft gesetzten Browserfunktionen oder für den tatsächlichen Browser zurück, wenn keine Außerkraftsetzung angegeben wurde.</summary>
      <returns>Die Browserfunktionen.</returns>
      <param name="httpContext">Der aktuelle Kontext.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>Gibt den außer Kraft gesetzten Benutzer-Agent-Wert oder die tatsächliche Benutzer-Agent-Zeichenfolge zurück, wenn keine Außerkraftsetzung angegeben wurde.</summary>
      <returns>Die Benutzer-Agent-Zeichenfolge.</returns>
      <param name="httpContext">Der aktuelle Kontext.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetVaryByCustomStringForOverriddenBrowser(System.Web.HttpContext)">
      <summary>Ruft eine Zeichenfolge ab, die abhängig vom Browsertyp ist.</summary>
      <returns>Eine Zeichenfolge, die den Browser identifiziert.</returns>
      <param name="httpContext">Der aktuelle Kontext.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetVaryByCustomStringForOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>Ruft eine Zeichenfolge ab, die abhängig vom Browsertyp ist. </summary>
      <returns>Eine Zeichenfolge, die den Browser identifiziert.</returns>
      <param name="httpContext">Die aktuelle Kontextbasis.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.String)">
      <summary>Setzt den tatsächlichen Benutzer-Agent-Wert der Anforderung mithilfe des angegebenen Benutzer-Agents außer Kraft.</summary>
      <param name="httpContext">Der aktuelle Kontext.</param>
      <param name="userAgent">Der zu verwendende Benutzer-Agent.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.Web.WebPages.BrowserOverride)">
      <summary>Setzt den tatsächlichen Benutzer-Agent-Wert der Anforderung mithilfe der angegebenen Informationen zur Außerkraftsetzung des Browsers außer Kraft.</summary>
      <param name="httpContext">Der aktuelle Kontext.</param>
      <param name="browserOverride">Einer der Enumerationswerte, der die zu verwendenden Informationen zur Außerkraftsetzung des Browsers darstellt.</param>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverride">
      <summary>Gibt Browsertypen an, die für die Methode <see cref="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.Web.WebPages.BrowserOverride)" /> definiert werden können.</summary>
    </member>
    <member name="F:System.Web.WebPages.BrowserOverride.Desktop">
      <summary>Gibt einen Desktopbrowser an.</summary>
    </member>
    <member name="F:System.Web.WebPages.BrowserOverride.Mobile">
      <summary>Gibt einen mobilen Browser an.</summary>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverrideStore">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Der aktuelle BrowserOverrideStore wird verwendet, um den Benutzer-Agent einer Anforderung abzurufen bzw. festzulegen.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.#ctor">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.BrowserOverrideStore" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Sucht einen Benutzer-Agent, indem das Cookie zur Außerkraftsetzung des Browsers gesucht wird.</summary>
      <returns>Der Benutzer-Agent.</returns>
      <param name="httpContext">Der HTTP-Kontext.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.SetOverriddenUserAgent(System.Web.HttpContextBase,System.String)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Fügt der Antwort der aktuellen Anforderung ein Cookie zur Außerkraftsetzung des Browsers mit dem festgelegten Benutzer-Agenten hinzu.</summary>
      <param name="httpContext">Der HTTP-Kontext.</param>
      <param name="userAgent">Der Benutzer-Agent.</param>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverrideStores">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStores.#ctor">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="P:System.Web.WebPages.BrowserOverrideStores.Current">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="T:System.Web.WebPages.CookieBrowserOverrideStore">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft den außer Kraft gesetzten Benutzer-Agenten für eine Anforderung von einem Cookie ab.Erstellt ein Cookie, das den außer Kraft gesetzten Benutzer-Agenten festlegt.</summary>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.#ctor">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.CookieBrowserOverrideStore" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.#ctor(System.Int32)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.CookieBrowserOverrideStore" />-Klasse.</summary>
      <param name="daysToExpire">Die Tage bis zum Ablauf.</param>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Sucht einen Benutzer-Agent, indem das Cookie zur Außerkraftsetzung des Browsers gesucht wird.</summary>
      <returns>Der Benutzer-Agent.</returns>
      <param name="httpContext">Der HTTP-Kontext.</param>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.SetOverriddenUserAgent(System.Web.HttpContextBase,System.String)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Fügt der Antwort der aktuellen Anforderung ein Cookie zur Außerkraftsetzung des Browsers mit dem festgelegten Benutzer-Agenten hinzu.</summary>
      <param name="httpContext">Der HTTP-Kontext.</param>
      <param name="userAgent">Der Benutzer-Agent.</param>
    </member>
    <member name="T:System.Web.WebPages.DefaultDisplayMode">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Stellt den Standardanzeigemodus der Webseiten dar.</summary>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.#ctor">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.DefaultDisplayMode" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.#ctor(System.String)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.DefaultDisplayMode" />-Klasse.</summary>
      <param name="suffix">Das Suffix.</param>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.CanHandleContext(System.Web.HttpContextBase)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Gibt einen Wert an, der festlegt, ob <see cref="T:System.Web.HttpContextBase" /> Kontext verarbeiten kann.</summary>
      <returns>true, wenn <see cref="T:System.Web.HttpContextBase" /> Kontext verarbeiten kann, andernfalls false.</returns>
      <param name="httpContext">Der angegebene HTTP-Kontext.</param>
    </member>
    <member name="P:System.Web.WebPages.DefaultDisplayMode.ContextCondition">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft einen Wert ab, der angibt, ob die Kontextbedingung einen Standardmodus anzeigt, oder legt diesen fest.</summary>
      <returns>true, wenn die Kontextbedingung einen Standardmodus anzeigt, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.WebPages.DefaultDisplayMode.DisplayModeId">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft den Anzeigemodusbezeichner der Webseiten ab.</summary>
      <returns>Der Anzeigemodusbezeichner der Webseiten.</returns>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.GetDisplayInfo(System.Web.HttpContextBase,System.String,System.Func{System.String,System.Boolean})">
      <summary>Ruft die Anzeigeinformationen zu einem Element im Ergebnisbereich ab.</summary>
      <returns>Die Anzeigeinformationen zu einem Element im Ergebnisbereich.</returns>
      <param name="httpContext">Der HTTP-Kontext.</param>
      <param name="virtualPath">Der virtuelle Pfad.</param>
      <param name="virtualPathExists">true, wenn der virtuelle Pfad vorhanden ist, andernfalls false.</param>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.TransformPath(System.String,System.String)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Tranformiert den Pfad des Anzeigemodus.</summary>
      <returns>Der Pfad des Anzeigemodus, der transformiert werden soll.</returns>
      <param name="virtualPath">Der virtuelle Pfad.</param>
      <param name="suffix">Das Suffix.</param>
    </member>
    <member name="T:System.Web.WebPages.DisplayInfo">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Stellt die Anzeigeinformationen einer Eigenschaft dar.</summary>
    </member>
    <member name="M:System.Web.WebPages.DisplayInfo.#ctor(System.String,System.Web.WebPages.IDisplayMode)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.DisplayInfo" />-Klasse.</summary>
      <param name="filePath">Der virtuelle Pfad.</param>
      <param name="displayMode">Der aktive Anzeigemodus.</param>
    </member>
    <member name="P:System.Web.WebPages.DisplayInfo.DisplayMode">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft den aktiven Anzeigemodus für eine Webseite ab.</summary>
      <returns>Der aktive Anzeigemodus für eine Webseite.</returns>
    </member>
    <member name="P:System.Web.WebPages.DisplayInfo.FilePath">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft den virtuellen Pfad der aktuellen Webseite ab.</summary>
      <returns>Der virtuelle Pfad der aktuellen Webseite.</returns>
    </member>
    <member name="T:System.Web.WebPages.DisplayModeProvider">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Stellt die Anzeigemodi für den Anbieter dar.</summary>
    </member>
    <member name="F:System.Web.WebPages.DisplayModeProvider.DefaultDisplayModeId">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Definiert den Standardanzeigemodusbezeichner.</summary>
    </member>
    <member name="M:System.Web.WebPages.DisplayModeProvider.GetAvailableDisplayModesForContext(System.Web.HttpContextBase,System.Web.WebPages.IDisplayMode)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft eine Liste der verfügbaren Anzeigemodi für die Kontextbasis ab.</summary>
      <returns>Eine Liste der verfügbaren Anzeigemodi für die Kontextbasis.</returns>
      <param name="httpContext">Die HTTP-Kontextbasis.</param>
      <param name="currentDisplayMode">Der aktuelle Anzeigemodus.</param>
    </member>
    <member name="M:System.Web.WebPages.DisplayModeProvider.GetDisplayInfoForVirtualPath(System.String,System.Web.HttpContextBase,System.Func{System.String,System.Boolean},System.Web.WebPages.IDisplayMode)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft die <see cref="T:System.Web.WebPages.DisplayInfo" /> für den virtuellen Pfad ab.</summary>
      <returns>Die <see cref="T:System.Web.WebPages.DisplayInfo" /> für den virtuellen Pfad.</returns>
      <param name="virtualPath">Der virtuelle Pfad.</param>
      <param name="httpContext">Die HTTP-Kontextbasis.</param>
      <param name="virtualPathExists">true, wenn der virtuelle Pfad vorhanden ist, andernfalls false.</param>
      <param name="currentDisplayMode">Der aktuelle Anzeigemodus.</param>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.Instance">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft eine Instanz des <see cref="T:System.Web.WebPages.DisplayModeProvider" />-Objekts ab.</summary>
      <returns>Die Instanz des <see cref="T:System.Web.WebPages.DisplayModeProvider" />-Objekts.</returns>
    </member>
    <member name="F:System.Web.WebPages.DisplayModeProvider.MobileDisplayModeId">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Definiert den mobilen Anzeigemodusbezeichner.</summary>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.Modes">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft eine Liste der Modi von <see cref="T:System.Web.WebPages.DisplayModeProvider" /> ab.</summary>
      <returns>Eine Liste der Modi von <see cref="T:System.Web.WebPages.DisplayModeProvider" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.RequireConsistentDisplayMode">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob ein konsistenter Anzeigemodus für die Webseite erforderlich ist.</summary>
      <returns>true, wenn ein konsistenter Anzeigemodus für die Webseite erforderlich ist, andernfalls false.</returns>
    </member>
    <member name="T:System.Web.WebPages.HelperPage">
      <summary>Stellt eine Basisklasse für Seiten dar, die verwendet wird, wenn ASP.NET eine CSHTML- oder VBHTML-Datei kompiliert. Sie stellt Eigenschaften und Methoden auf Seiten- und auf Anwendungsebene zur Verfügung.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.#ctor">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.HelperPage" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.App">
      <summary>Ruft die Anwendungszustandsdaten als ein <see cref="T:System.Dynamic.DynamicObject" />-Objekt ab, das Aufrufer zum Erstellen benutzerdefinierter Eigenschaften im Anwendungsbereich sowie für den Zugriff darauf verwenden können.</summary>
      <returns>Die Anwendungszustandsdaten.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.AppState">
      <summary>Ruft einen Verweis auf globale Anwendungszustandsdaten ab, die sitzungs- und anforderungsübergreifend in einer ASP.NET-Anwendung gemeinsam verwendet werden können.</summary>
      <returns>Die Anwendungszustandsdaten.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.BeginContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Versetzt alle Hilfsanweisungen in den Kontext der Hilfsseite.</summary>
      <param name="writer">Der Textwriter.</param>
      <param name="virtualPath">Der virtuelle Pfad des Hilfsprogramms.</param>
      <param name="startPosition">Die Startposition.</param>
      <param name="length">Die Länge des Kontexts.</param>
      <param name="isLiteral">true, wenn der Kontext ein literales Attribut aufweist, andernfalls false.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.BeginContext(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Versetzt alle Hilfsanweisungen in den Kontext der Hilfsseite.</summary>
      <param name="virtualPath">Der virtuelle Pfad des Hilfsprogramms.</param>
      <param name="startPosition">Die Startposition.</param>
      <param name="length">Die Länge des Kontexts.</param>
      <param name="isLiteral">true, wenn der Kontext ein literales Attribut aufweist, andernfalls false.</param>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Cache">
      <summary>Ruft das Cacheobjekt für die aktuelle Anwendungsdomäne ab.</summary>
      <returns>Das Cacheobjekt.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Context">
      <summary>Ruft das <see cref="T:System.Web.HttpContextBase" />-Objekt ab, das einer Seite zugeordnet ist.</summary>
      <returns>Die aktuellen Kontextdaten.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.CurrentPage">
      <summary>Ruft die aktuelle Seite für diese Hilfsseite ab.</summary>
      <returns>Die aktuelle Seite.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.EndContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Zeigt das Ende des Kontextblocks an.</summary>
      <param name="writer">Der Textwriter.</param>
      <param name="virtualPath">Der virtuelle Pfad des Hilfsprogramms.</param>
      <param name="startPosition">Die Startposition.</param>
      <param name="length">Die Länge des Kontexts.</param>
      <param name="isLiteral">true, wenn der Kontext ein literales Attribut aufweist, andernfalls false.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.EndContext(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Zeigt das Ende des Kontextblocks an.</summary>
      <param name="virtualPath">Der virtuelle Pfad des Hilfsprogramms.</param>
      <param name="startPosition">Die Startposition.</param>
      <param name="length">Die Länge des Kontexts.</param>
      <param name="isLiteral">true, wenn der Kontext ein literales Attribut aufweist, andernfalls false.</param>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.HelperVirtualPath">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft den Pfad der Hilfsseite ab oder legt ihn fest.</summary>
      <returns>Der Pfad der Hilfsseite.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.Href(System.String,System.Object[])">
      <summary>Erstellt eine absolute URL aus einer anwendungsrelativen URL mithilfe der angegebenen Parameter.</summary>
      <returns>Die absolute URL.</returns>
      <param name="path">Der ursprüngliche Pfad, der in der URL verwendet werden soll.</param>
      <param name="pathParts">Zusätzliche Pfadinformationen, z. B. Ordner und Unterordner.</param>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Html">
      <summary>Ruft das <see cref="T:System.Web.WebPages.Html.HtmlHelper" />-Objekt ab, das einer Seite zugeordnet ist.</summary>
      <returns>Ein Objekt, das das Rendern von HTML-Formularsteuerelementen auf einer Seite unterstützt.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.IsAjax">
      <summary>Ruft einen Wert ab, der angibt, ob AJAX während der Anforderung der Webseite verwendet wird.</summary>
      <returns>true, wenn AJAX während der Anforderung verwendet wird, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.IsPost">
      <summary>Ruft einen Wert ab, der angibt, ob die aktuelle Anforderung eine POST-Anforderung ist (die mithilfe des HTTP POST-Verbs gesendet wird).</summary>
      <returns>true, wenn das HTTP-Verb POST ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Model">
      <summary>Ruft das Modell ab, das einer Seite zugeordnet ist.</summary>
      <returns>Ein Objekt, das ein Modell darstellt, das den Sichtdaten für eine Seite zugeordnet ist.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.ModelState">
      <summary>Ruft die Zustandsdaten für das Modell ab, das einer Seite zugeordnet ist.</summary>
      <returns>Der Zustand des Modells.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Page">
      <summary>Ruft eigenschaftenähnlichen Zugriff auf Daten der Seite ab, die für Seiten, Layoutseiten und Teilseiten gemeinsam verwendet werden.</summary>
      <returns>Ein Objekt, das Daten der Seite enthält.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.PageContext">
      <summary>Ruft den HTTP-Kontext für die Webseite ab bzw. legt diesen fest.</summary>
      <returns>Der HTTP-Kontext für die Webseite.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.PageData">
      <summary>Ruft arrayähnlichen Zugriff auf Daten der Seite ab, die für Seiten, Layoutseiten und Teilseiten gemeinsam verwendet werden.</summary>
      <returns>Ein Objekt, das arrayähnlichen Zugriff auf Daten der Seite bereitstellt.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Request">
      <summary>Ruft das <see cref="T:System.Web.HttpRequest" />-Objekt für die aktuelle HTTP-Anforderung ab.</summary>
      <returns>Ein <see cref="T:System.Web.HttpRequest" />-Objekt, das die HTTP-Werte enthält, die von einem Client während einer Webanforderung gesendet werden.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Response">
      <summary>Ruft das <see cref="T:System.Web.HttpResponse" />-Objekt für die aktuelle HTTP-Antwort ab.</summary>
      <returns>Ein <see cref="T:System.Web.HttpResponse" />-Objekt, das die HTTP-Antwortinformationen aus einem ASP.NET-Vorgang enthält.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Server">
      <summary>Ruft das <see cref="T:System.Web.HttpServerUtility" />-Objekt ab, das Methoden bereitstellt, die als Teil der Webseitenverarbeitung verwendet werden können.</summary>
      <returns>Das <see cref="T:System.Web.HttpServerUtility" />-Objekt.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Session">
      <summary>Ruft das <see cref="T:System.Web.HttpSessionState" />-Objekt für die aktuelle HTTP-Anforderung ab.</summary>
      <returns>Das <see cref="T:System.Web.HttpSessionState" />-Objekt für die aktuelle HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.UrlData">
      <summary>Ruft Daten ab, die sich auf den URL-Pfad beziehen.</summary>
      <returns>Daten, die sich auf den URL-Pfad beziehen.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.User">
      <summary>Ruft einen Benutzerwert ab, der auf dem HTTP-Kontext basiert.</summary>
      <returns>Ein Benutzerwert, der auf dem HTTP-Kontext basiert.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.VirtualPath">
      <summary>Ruft den virtuellen Pfad der Seite ab.</summary>
      <returns>Der virtuelle Pfad.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteAttributeTo(System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Schreibt ein Attribut, das dem Hilfsprogramm zugeordnet ist.</summary>
      <param name="writer">Der Textwriter.</param>
      <param name="name">Der Name des Attributs.</param>
      <param name="prefix">Das Präfix.</param>
      <param name="suffix">Das Suffix.</param>
      <param name="values">Der Attributwert.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteLiteralTo(System.IO.TextWriter,System.Object)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Schreibt ein literales Objekt in das Hilfsprogramm.</summary>
      <param name="writer">Der Textwriter.</param>
      <param name="value">Der Wert des Objekts.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteLiteralTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Schreibt ein Hilfsprogramm-Ergebnisobjekt in das Hilfsprogramm.</summary>
      <param name="writer">Der Textwriter.</param>
      <param name="value">Das Hilfsprogrammergebnis.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteTo(System.IO.TextWriter,System.Object)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Schreibt ein Objekt in das Hilfsprogramm.</summary>
      <param name="writer">Der Textwriter.</param>
      <param name="value">Der Objektwert.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Schreibt ein Hilfsprogramm-Ergebnisobjekt in das Hilfsprogramm.</summary>
      <param name="writer">Der Textwriter.</param>
      <param name="value">Der Wert des Hilfsprogrammergebnisses.</param>
    </member>
    <member name="T:System.Web.WebPages.HelperResult">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.#ctor(System.Action{System.IO.TextWriter})">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.ToHtmlString">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.ToString">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.WriteTo(System.IO.TextWriter)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="T:System.Web.WebPages.HttpContextExtensions">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.HttpContextExtensions.RedirectLocal(System.Web.HttpContextBase,System.String)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.HttpContextExtensions.RegisterForDispose(System.Web.HttpContextBase,System.IDisposable)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="T:System.Web.WebPages.IDisplayMode">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Stellt die Anzeigemodusschnittstelle für die Webseiten dar.</summary>
    </member>
    <member name="M:System.Web.WebPages.IDisplayMode.CanHandleContext(System.Web.HttpContextBase)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Gibt einen Wert an, der festlegt, ob die Webseiten HTTP-Kontext verarbeiten können.</summary>
      <returns>true, wenn die Webseiten HTTP-Kontext verarbeiten können, andernfalls false.</returns>
      <param name="httpContext">Der HTTP-Kontext.</param>
    </member>
    <member name="P:System.Web.WebPages.IDisplayMode.DisplayModeId">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft den Anzeigemodusbezeichner für die Webseiten ab.</summary>
      <returns>Der Anzeigemodusbezeichner für die Webseiten.</returns>
    </member>
    <member name="M:System.Web.WebPages.IDisplayMode.GetDisplayInfo(System.Web.HttpContextBase,System.String,System.Func{System.String,System.Boolean})">
      <summary>Gibt diese Methode zur Anzeige aller Informationen für die Webseiten zurück.</summary>
      <returns>Die Methode zur Anzeige aller Informationen für die Webseiten.</returns>
      <param name="httpContext">Der HTTP-Kontext.</param>
      <param name="virtualPath">Der virtuelle Pfad.</param>
      <param name="virtualPathExists">true, wenn der virtuelle Pfad vorhanden ist, andernfalls false.</param>
    </member>
    <member name="T:System.Web.WebPages.ITemplateFile">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="P:System.Web.WebPages.ITemplateFile.TemplateInfo">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="T:System.Web.WebPages.IValidator">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Definiert die Eigenschaften und Methoden der Objekte, die Teile von Webseiten sind.</summary>
    </member>
    <member name="P:System.Web.WebPages.IValidator.ClientValidationRule">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft einen Container für die Clientvalidierung für das Pflichtfeld ab.</summary>
      <returns>Ein Container für die Clientvalidierung für das Pflichtfeld.</returns>
    </member>
    <member name="M:System.Web.WebPages.IValidator.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Wertet die Bedingung, die überprüft wird, aus und aktualisiert den Überprüfungskontext.</summary>
      <returns>Die Bedingung, die überprüft wird, und aktualisiert den Überprüfungskontext.</returns>
      <param name="validationContext">Der Überprüfungskontext.</param>
    </member>
    <member name="T:System.Web.WebPages.IVirtualPathFactory">
      <summary>Definiert Methoden, die von virtuellen Pfadhandlerfactorys implementiert werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.IVirtualPathFactory.CreateInstance(System.String)">
      <summary>Erstellt eine Handlerfactory für den angegebenen virtuellen Pfad.</summary>
      <returns>Eine Handlerfactory für den angegebenen virtuellen Pfad.</returns>
      <param name="virtualPath">Der virtuelle Pfad.</param>
    </member>
    <member name="M:System.Web.WebPages.IVirtualPathFactory.Exists(System.String)">
      <summary>Bestimmt, ob der angegebene virtuelle Pfad einer Handlerfactory zugeordnet ist.</summary>
      <returns>true, wenn für den angegebenen virtuellen Pfad eine Handlerfactory vorhanden ist, andernfalls false.</returns>
      <param name="virtualPath">Der virtuelle Pfad.</param>
    </member>
    <member name="T:System.Web.WebPages.IWebPageRequestExecutor">
      <summary>Definiert Methoden zum Implementieren einer Executor-Klasse, die Code auf einer Webseite ausführen kann.</summary>
    </member>
    <member name="M:System.Web.WebPages.IWebPageRequestExecutor.Execute(System.Web.WebPages.WebPage)">
      <summary>Führt den Code auf der angegebenen Webseite aus.</summary>
      <returns>true, wenn der Executor die Ausführung der Webseite übernommen hat, andernfalls false.</returns>
      <param name="page">Die Webseite.</param>
    </member>
    <member name="T:System.Web.WebPages.PageVirtualPathAttribute">
      <summary>Stellt ein Pfadattribut für eine Webseitenklasse dar.</summary>
    </member>
    <member name="M:System.Web.WebPages.PageVirtualPathAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.PageVirtualPathAttribute" />-Klasse mithilfe des angegebenen virtuellen Pfads.</summary>
      <param name="virtualPath">Der virtuelle Pfad.</param>
    </member>
    <member name="P:System.Web.WebPages.PageVirtualPathAttribute.VirtualPath">
      <summary>Ruft den virtuellen Pfad der aktuellen Webseite ab.</summary>
      <returns>Der virtuelle Pfad.</returns>
    </member>
    <member name="T:System.Web.WebPages.PreApplicationStartCode">
      <summary>Stellt einen Registrierungspunkt für Code vor dem Anwendungsstart für Webseiten zur Verfügung.</summary>
    </member>
    <member name="M:System.Web.WebPages.PreApplicationStartCode.Start">
      <summary>Registriert Code vor dem Anwendungsstart für Webseiten.</summary>
    </member>
    <member name="T:System.Web.WebPages.RequestExtensions">
      <summary>Definiert Erweiterungsmethoden für die <see cref="T:System.Web.HttpRequestBase" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.WebPages.RequestExtensions.IsUrlLocalToHost(System.Web.HttpRequestBase,System.String)">
      <summary>Ermittelt, ob die angegebene URL auf den lokalen Computer verweist.</summary>
      <returns>true, wenn die angegebene URL auf den lokalen Computer verweist, andernfalls false.</returns>
      <param name="request">Das HTTP-Anforderungsobjekt.</param>
      <param name="url">Die zu testende URL.</param>
    </member>
    <member name="T:System.Web.WebPages.RequestFieldValidatorBase">
      <summary>Dient als abstrakte Basisklasse für die Überprüfungshilfsklassen.</summary>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der abgeleiteten Klasse und gibt den Namen des HTML-Elements an, das überprüft wird.</summary>
      <param name="errorMessage">Der Name (Wert des Attributs name) des zu überprüfenden Benutzereingabeelements.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.#ctor(System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der abgeleiteten Klasse und registriert die angegebene Zeichenfolge als die anzuzeigende Fehlermeldung, wenn kein Wert bereitgestellt wird. Gibt außerdem an, ob die Methode nicht überprüfte Daten verwenden kann.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
      <param name="useUnvalidatedValues">true, wenn nicht überprüfte Benutzereingaben verwendet werden können, false, wenn nicht überprüfte Daten zurückgewiesen werden sollen.Dieser Parameter wird auf true festgelegt, indem Methoden aufgerufen werden, wenn der tatsächliche Wert der Benutzereingabe nicht wichtig ist, z. B. für Pflichtfelder.</param>
    </member>
    <member name="P:System.Web.WebPages.RequestFieldValidatorBase.ClientValidationRule">
      <summary>Ruft bei Implementierung in einer abgeleiteten Klasse einen Container für die Clientüberprüfung für das Pflichtfeld ab.</summary>
      <returns>Der Container.</returns>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.GetHttpContext(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Gibt den HTTP-Kontext der aktuellen Anforderung zurück.</summary>
      <returns>Der Kontext.</returns>
      <param name="validationContext">Der Überprüfungskontext.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.GetRequestValue(System.Web.HttpRequestBase,System.String)">
      <summary>Gibt den zu überprüfenden Wert zurück.</summary>
      <returns>Der zu überprüfende Wert.</returns>
      <param name="request">Die aktuelle Anforderung.</param>
      <param name="field">Der Name des Felds aus der aktuellen Anforderung, der überprüft werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.IsValid(System.Web.HttpContextBase,System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob der angegebene Wert gültig ist.</summary>
      <returns>true, wenn der Wert gültig ist, andernfalls false.</returns>
      <param name="httpContext">Der aktuelle Kontext.</param>
      <param name="value">Der zu überprüfende Wert.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Führt den Überprüfungstest aus.</summary>
      <returns>Das Ergebnis des Überprüfungstests.</returns>
      <param name="validationContext">Der Kontext.</param>
    </member>
    <member name="T:System.Web.WebPages.ResponseExtensions">
      <summary>Definiert Erweiterungsmethoden für die <see cref="T:System.Web.HttpResponseBase" />-Basisklasse.</summary>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.OutputCache(System.Web.HttpResponseBase,System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Web.HttpCacheability)">
      <summary>Konfiguriert die Cacherichtlinie einer HTTP-Antwortinstanz.</summary>
      <param name="response">Die HTTP-Antwortinstanz.</param>
      <param name="numberOfSeconds">Die Zeitspanne in Sekunden, bevor Elemente im Cache ablaufen.</param>
      <param name="sliding">true, um anzugeben, dass Elemente im Cache fließend ablaufen, false, um anzugeben, dass Elemente ablaufen, wenn sie den vordefinierten Ablaufzeitpunkt erreichen.</param>
      <param name="varyByParams">Die Liste aller Parameter, die von einem GET- oder POST-Vorgang empfangen werden können, und die sich auf den Cache auswirken.</param>
      <param name="varyByHeaders">Die Liste aller HTTP-Header, die sich auf den Cache auswirken.</param>
      <param name="varyByContentEncodings">Die Liste aller Inhaltscodierungsheader, die sich auf den Cache auswirken.</param>
      <param name="cacheability">Einer der Enumerationswerte, der angibt, wie Elemente zwischengespeichert werden.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.SetStatus(System.Web.HttpResponseBase,System.Int32)">
      <summary>Legt den HTTP-Statuscode einer HTTP-Antwort mithilfe des angegebenen ganzzahligen Werts fest.</summary>
      <param name="response">Die HTTP-Antwortinstanz.</param>
      <param name="httpStatusCode">Der HTTP-Statuscode.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.SetStatus(System.Web.HttpResponseBase,System.Net.HttpStatusCode)">
      <summary>Legt den HTTP-Statuscode einer HTTP-Antwort mithilfe des angegebenen Enumerationswerts des HTTP-Statuscodes fest.</summary>
      <param name="response">Die HTTP-Antwortinstanz.</param>
      <param name="httpStatusCode">Der HTTP-Statuscode.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.WriteBinary(System.Web.HttpResponseBase,System.Byte[])">
      <summary>Schreibt eine Bytesequenz, die den binären Inhalt eines nicht angegebenen Typs darstellt, in den Ausgabedatenstrom einer HTTP-Antwort.</summary>
      <param name="response">Die HTTP-Antwortinstanz.</param>
      <param name="data">Gibt ein Array zurück, das die zu schreibenden Bytes enthält.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.WriteBinary(System.Web.HttpResponseBase,System.Byte[],System.String)">
      <summary>Schreibt eine Bytesequenz, die den binären Inhalt des angegebenen MIME-Typs darstellt, in den Ausgabedatenstrom einer HTTP-Antwort.</summary>
      <param name="response">Die empfangende HTTP-Antwortinstanz.</param>
      <param name="data">Gibt ein Array zurück, das die zu schreibenden Bytes enthält.</param>
      <param name="mimeType">Der MIME-Typ des binären Inhalts.</param>
    </member>
    <member name="T:System.Web.WebPages.SectionWriter">
      <summary>Stellt einen Delegaten zur Verfügung, der mindestens eine Methode darstellt, die beim Schreiben eines Inhaltsabschnitts aufgerufen wird.</summary>
    </member>
    <member name="T:System.Web.WebPages.StartPage">
      <summary>Stellt Methoden und Eigenschaften zur Verfügung, die zum Rendern von Startseiten verwendet werden, die das Razor-Anzeigemodul verwenden.</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.StartPage" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.WebPages.StartPage.ChildPage">
      <summary>Ruft die untergeordnete Seite der aktuellen Startseite ab oder legt diese fest.</summary>
      <returns>Die untergeordnete Seite der aktuellen Startseite.</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Context">
      <summary>Ruft den Kontext der <see cref="P:System.Web.WebPages.StartPage.ChildPage" />-Seite ab oder legt diesen fest.</summary>
      <returns>Der Kontext der <see cref="P:System.Web.WebPages.StartPage.ChildPage" />-Seite.</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.ExecutePageHierarchy">
      <summary>Ruft die Methoden auf, die zum Ausführen des von einem Entwickler geschriebenen Codes auf der Startseite _PageStart und der Seite <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.GetOutputWriter">
      <summary>Gibt die Textwriterinstanz zurück, die zum Rendern der Seite verwendet wird.</summary>
      <returns>Der Textwriter.</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.GetStartPage(System.Web.WebPages.WebPageRenderingBase,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Gibt eine Initialisierungsseite für die angegebene Seite zurück.</summary>
      <returns>Die Seite _AppStart, wenn die Seite _AppStart vorhanden ist.Wenn die Seite _AppStart nicht gefunden wird, wird die Seite _PageStart zurückgegeben, wenn eine Seite _PageStart vorhanden ist.Wenn die Seiten _AppStart und _PageStart nicht gefunden werden, wird <paramref name="page" /> zurückgegeben.</returns>
      <param name="page">Die Seite.</param>
      <param name="fileName">Der Dateiname der Seite.</param>
      <param name="supportedExtensions">Die Auflistung der Dateinamenerweiterungen, die ASP.NET Razor-Syntax enthalten kann, z. B. "cshtml" und "vbhtml".</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> oder <paramref name="fileName" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="supportedExtensions" /> ist null oder leer.</exception>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Layout">
      <summary>Ruft den Pfad der Layoutseite für die <see cref="P:System.Web.WebPages.StartPage.ChildPage" />-Seite ab oder legt diesen fest.</summary>
      <returns>Der Pfad der Layoutseite für die <see cref="P:System.Web.WebPages.StartPage.ChildPage" />-Seite.</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Page">
      <summary>Ruft eigenschaftenähnlichen Zugriff auf Daten der <see cref="P:System.Web.WebPages.StartPage.ChildPage" />-Seite ab, die für Seiten, Layoutseiten und Teilseiten gemeinsam verwendet werden.</summary>
      <returns>Ein Objekt, das Daten der <see cref="P:System.Web.WebPages.StartPage.ChildPage" />-Seite enthält.</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.PageData">
      <summary>Ruft arrayähnlichen Zugriff auf Daten der <see cref="P:System.Web.WebPages.StartPage.ChildPage" />-Seite ab, die für Seiten, Layoutseiten und Teilseiten gemeinsam verwendet werden.</summary>
      <returns>Ein Objekt, das arrayähnlichen Zugriff auf Daten der <see cref="P:System.Web.WebPages.StartPage.ChildPage" />-Seite bereitstellt.</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.RenderPage(System.String,System.Object[])">
      <summary>Rendert die Seite <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
      <returns>Das HTML-Markup, das die Webseite darstellt.</returns>
      <param name="path">Der Pfad der zu rendernden Seite.</param>
      <param name="data">Weitere Daten, die zum Rendern der Seite verwendet werden.</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.RunPage">
      <summary>Führt den von einem Entwickler geschriebenen Code auf der Seite <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> aus.</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.Write(System.Object)">
      <summary>Schreibt die Zeichenfolgendarstellung des angegebenen Objekts als HTML-codierte Zeichenfolge.</summary>
      <param name="value">Das Objekt, das codiert und geschrieben werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.Write(System.Web.WebPages.HelperResult)">
      <summary>Schreibt die Zeichenfolgendarstellung des angegebenen <see cref="T:System.Web.WebPages.HelperResult" />-Objekts als HTML-codierte Zeichenfolge.</summary>
      <param name="result">Das Hilfsprogrammergebnis, das codiert und geschrieben werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.WriteLiteral(System.Object)">
      <summary>Schreibt die Zeichenfolgendarstellung des angegebenen Objekts ohne HTML-Codierung.</summary>
      <param name="value">Das zu schreibende Objekt.</param>
    </member>
    <member name="T:System.Web.WebPages.StringExtensions">
      <summary>Stellt Hilfsmethoden zum Konvertieren von Zeichenfolgenwerten in andere Datentypen zur Verfügung.</summary>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.As``1(System.String)">
      <summary>Konvertiert eine Zeichenfolge in einen stark typisierten Wert des angegebenen Datentyps.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
      <typeparam name="TValue">Die Daten, in die die Konvertierung erfolgen soll.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.As``1(System.String,``0)">
      <summary>Konvertiert eine Zeichenfolge in den angegebenen Datentyp und gibt einen Standardwert an.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
      <param name="defaultValue">Der zurückzugebende Wert, wenn <paramref name="value" /> den Wert null besitzt.</param>
      <typeparam name="TValue">Die Daten, in die die Konvertierung erfolgen soll.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsBool(System.String)">
      <summary>Konvertiert eine Zeichenfolge in einen booleschen Wert (wahr/falsch).</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsBool(System.String,System.Boolean)">
      <summary>Konvertiert eine Zeichenfolge in einen booleschen Wert (wahr/falsch) und gibt einen Standardwert an.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
      <param name="defaultValue">Der zurückzugebende Wert, wenn <paramref name="value" /> den Wert null besitzt oder ungültig ist.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDateTime(System.String)">
      <summary>Konvertiert eine Zeichenfolge in einen <see cref="T:System.DateTime" />-Wert.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDateTime(System.String,System.DateTime)">
      <summary>Konvertiert eine Zeichenfolge in einen <see cref="T:System.DateTime" />-Wert und gibt einen Standardwert an.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
      <param name="defaultValue">Der zurückzugebende Wert, wenn <paramref name="value" /> den Wert null besitzt oder ungültig ist.Der Standardwert ist der Mindestwert für die Uhrzeit im System.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDecimal(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine Zahl des Typs <see cref="T:System.Decimal" />.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDecimal(System.String,System.Decimal)">
      <summary>Konvertiert eine Zeichenfolge in eine Zahl des Typs <see cref="T:System.Decimal" /> und gibt einen Standardwert an.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
      <param name="defaultValue">Der zurückzugebende Wert, wenn <paramref name="value" /> den Wert null besitzt oder ungültig ist.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsFloat(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine Zahl des Typs <see cref="T:System.Single" />.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsFloat(System.String,System.Single)">
      <summary>Konvertiert eine Zeichenfolge in eine Zahl des Typs <see cref="T:System.Single" /> und gibt einen Standardwert an.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
      <param name="defaultValue">Der zurückzugebende Wert, wenn <paramref name="value" /> den Wert null besitzt.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsInt(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine ganze Zahl.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsInt(System.String,System.Int32)">
      <summary>Konvertiert eine Zeichenfolge in eine ganze Zahl und gibt einen Standardwert an.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der zu konvertierende Wert.</param>
      <param name="defaultValue">Der zurückzugebende Wert, wenn <paramref name="value" /> den Wert null besitzt oder ungültig ist.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.Is``1(System.String)">
      <summary>Überprüft, ob eine Zeichenfolge in den angegebenen Datentyp konvertiert werden kann.</summary>
      <returns>true, wenn <paramref name="value" /> in den angegebenen Typ konvertiert werden kann, andernfalls false.</returns>
      <param name="value">Der zu testende Wert.</param>
      <typeparam name="TValue">Die Daten, in die die Konvertierung erfolgen soll.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsBool(System.String)">
      <summary>Überprüft, ob eine Zeichenfolge in den booleschen Typ (wahr/falsch) konvertiert werden kann.</summary>
      <returns>true, wenn <paramref name="value" /> in den angegebenen Typ konvertiert werden kann, andernfalls false.</returns>
      <param name="value">Der zu testende Zeichenfolgenwert.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsDateTime(System.String)">
      <summary>Überprüft, ob eine Zeichenfolge in den Typ <see cref="T:System.DateTime" /> konvertiert werden kann.</summary>
      <returns>true, wenn <paramref name="value" /> in den angegebenen Typ konvertiert werden kann, andernfalls false.</returns>
      <param name="value">Der zu testende Zeichenfolgenwert.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsDecimal(System.String)">
      <summary>Überprüft, ob eine Zeichenfolge in den Typ <see cref="T:System.Decimal" /> konvertiert werden kann.</summary>
      <returns>true, wenn <paramref name="value" /> in den angegebenen Typ konvertiert werden kann, andernfalls false.</returns>
      <param name="value">Der zu testende Zeichenfolgenwert.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsEmpty(System.String)">
      <summary>Überprüft, ob ein Zeichenfolgenwert null oder leer ist.</summary>
      <returns>true, wenn <paramref name="value" /> den Wert null aufweist oder eine Zeichenfolge mit der Länge null ("") ist, andernfalls false.</returns>
      <param name="value">Der zu testende Zeichenfolgenwert.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsFloat(System.String)">
      <summary>Überprüft, ob eine Zeichenfolge in den Typ <see cref="T:System.Single" /> konvertiert werden kann.</summary>
      <returns>true, wenn <paramref name="value" /> in den angegebenen Typ konvertiert werden kann, andernfalls false.</returns>
      <param name="value">Der zu testende Zeichenfolgenwert.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsInt(System.String)">
      <summary>Überprüft, ob eine Zeichenfolge in eine ganze Zahl konvertiert werden kann.</summary>
      <returns>true, wenn <paramref name="value" /> in den angegebenen Typ konvertiert werden kann, andernfalls false.</returns>
      <param name="value">Der zu testende Zeichenfolgenwert.</param>
    </member>
    <member name="T:System.Web.WebPages.TemplateFileInfo">
      <summary>Enthält Methoden und Eigenschaften, die eine Dateiinformationsvorlage beschreiben.</summary>
    </member>
    <member name="M:System.Web.WebPages.TemplateFileInfo.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.TemplateFileInfo" />-Klasse mithilfe des angegebenen virtuellen Pfads.</summary>
      <param name="virtualPath">Der virtuelle Pfad.</param>
    </member>
    <member name="P:System.Web.WebPages.TemplateFileInfo.VirtualPath">
      <summary>Ruft den virtuellen Pfad der Webseite ab.</summary>
      <returns>Der virtuelle Pfad.</returns>
    </member>
    <member name="T:System.Web.WebPages.TemplateStack">
      <summary>Stellt eine LIFO-Auflistung (Last in, First out ) von <see cref="T:System.Web.WebPages.ITemplateFile" />-Vorlagendateien dar.</summary>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.GetCurrentTemplate(System.Web.HttpContextBase)">
      <summary>Gibt die aktuelle Vorlagendatei aus dem angegebenen HTTP-Kontext zurück.</summary>
      <returns>Die Vorlagendatei, die als oberste Datei vom Stapel entfernt wurde.</returns>
      <param name="httpContext"> Der HTTP-Kontext, der den Stapel enthält, der die Vorlagendateien speichert.</param>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.Pop(System.Web.HttpContextBase)">
      <summary>Entfernt die Vorlagendatei, die sich oben auf dem Stapel im angegebenen HTTP-Kontext befindet, und gibt diese zurück.</summary>
      <returns>Die Vorlagendatei, die als oberste Datei vom Stapel entfernt wurde.</returns>
      <param name="httpContext">Der HTTP-Kontext, der den Stapel enthält, der die Vorlagendateien speichert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> ist null.</exception>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.Push(System.Web.HttpContextBase,System.Web.WebPages.ITemplateFile)">
      <summary>Fügt eine Vorlagendatei oben auf dem Stapel im angegebenen HTTP-Kontext ein.</summary>
      <param name="httpContext">Der HTTP-Kontext, der den Stapel enthält, der die Vorlagendateien speichert.</param>
      <param name="templateFile">Die Vorlagendatei, die mittels Push auf den angegebenen Stapel verschoben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> oder <paramref name="templateFile" /> ist null.</exception>
    </member>
    <member name="T:System.Web.WebPages.ValidationHelper">
      <summary>Implementiert eine Überprüfung der Benutzereingabe.</summary>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Add(System.Collections.Generic.IEnumerable{System.String},System.Web.WebPages.IValidator[])">
      <summary>Registriert eine Liste von Benutzereingabeelementen für die Überprüfung.</summary>
      <param name="fields">Die Namen (Wert des Attributs name) der zu überprüfenden Benutzereingabeelemente.</param>
      <param name="validators">Der Überprüfungstyp, der für jedes Benutzereingabeelement registriert werden soll, das in <paramref name="fields" /> angegeben wird.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Add(System.String,System.Web.WebPages.IValidator[])">
      <summary>Registriert ein Benutzereingabeelement für die Überprüfung.</summary>
      <param name="field">Der Name (Wert des Attributs name) des zu überprüfenden Benutzereingabeelements.</param>
      <param name="validators">Eine Liste mit mindestens einem zu registrierenden Überprüfungstyp.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.AddFormError(System.String)">
      <summary>Fügt eine Fehlermeldung hinzu.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.ClassFor(System.String)">
      <summary>Rendert ein Attribut, das auf die CSS-Formatvorlagendefinition verweist, die verwendet werden soll, wenn Überprüfungsmeldungen für das Benutzereingabeelement gerendert werden.</summary>
      <returns>Das Attribut.</returns>
      <param name="field">Der Name (Wert des Attributs name) des zu überprüfenden Benutzereingabeelements.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.For(System.String)">
      <summary>Rendert Attribute, die clientseitige Überprüfung für ein einzelnes Benutzereingabeelement ermöglichen.</summary>
      <returns>Die zu rendernden Attribute.</returns>
      <param name="field">Der Name (Wert des Attributs name) des zu überprüfenden Benutzereingabeelements.</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.FormField">
      <summary>Ruft den Namen des aktuellen Formulars ab.Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
      <returns>Der Name.</returns>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.GetErrors(System.String[])">
      <summary>Gibt eine Liste der aktuellen Überprüfungsfehler zurück und ermöglicht Ihnen die Angabe einer zu überprüfenden Feldliste.</summary>
      <returns>Die Liste der Fehler.</returns>
      <param name="fields">Optional.Die Namen (Wert des Attributs name) der Benutzereingabeelemente, für die Fehlerinformationen abgerufen werden sollen.Sie können beliebig viele Elementnamen angeben und diese durch Kommas trennen.Wenn Sie keine Feldliste angeben, gibt die Methode Fehler für alle Felder zurück.</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.InvalidCssClass">
      <summary>Ruft den Namen der Klasse ab, die zum Angeben des Aussehens der Anzeige von Fehlermeldungen verwendet wird, wenn Fehler aufgetreten sind.Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
      <returns>Der Name.</returns>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.IsValid(System.String[])">
      <summary>Ermittelt, ob der Inhalt der Benutzereingabefelder die Überprüfungstests besteht, und ermöglicht optional die Angabe einer Liste der zu überprüfenden Felder.</summary>
      <returns>true, wenn alle angegebenen Felder die Überprüfungstests bestehen, false, wenn eines der Felder einen Überprüfungsfehler enthält.</returns>
      <param name="fields">Optional.Die Namen (Wert des Attributs name) der Benutzereingabeelemente, die auf Überprüfungsfehler getestet werden sollen.Sie können beliebig viele Elementnamen angeben und diese durch Kommas trennen.Wenn Sie keine Feldliste angeben, überprüft die Methode alle Elemente, die für die Überprüfung registriert sind.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireField(System.String)">
      <summary>Registriert das angegebene Feld als ein Feld, für das eine Benutzereingabe erforderlich ist.</summary>
      <param name="field">Der Name (Wert des Attributs name) des zu überprüfenden Benutzereingabeelements.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireField(System.String,System.String)">
      <summary>Registriert das angegebene Feld als ein Feld, für das eine Benutzereingabe erforderlich ist, und registriert die angegebene Zeichenfolge als die Fehlermeldung, die angezeigt werden soll, wenn kein Wert bereitgestellt wird.</summary>
      <param name="field">Der Name (Wert des Attributs name) des zu überprüfenden Benutzereingabeelements.</param>
      <param name="errorMessage">Die Fehlermeldung.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireFields(System.String[])">
      <summary>Registriert die angegebenen Felder als Felder, für die eine Benutzereingabe erforderlich ist.</summary>
      <param name="fields">Die Namen (Wert des Attributs name) der zu überprüfenden Benutzereingabeelemente.Sie können beliebig viele Elementnamen angeben und diese durch Kommas trennen.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Validate(System.String[])">
      <summary>Führt die Überprüfung für Elemente aus, die für die Überprüfung registriert sind, und ermöglicht optional die Angabe einer Liste der zu überprüfenden Felder.</summary>
      <returns>Die Liste der Fehler für die angegebenen Felder, wenn Überprüfungsfehler aufgetreten sind.</returns>
      <param name="fields">Optional.Die Namen (Wert des Attributs name) der zu überprüfenden Benutzereingabeelemente.Sie können beliebig viele Elementnamen angeben und diese durch Kommas trennen.Wenn Sie keine Liste angeben, überprüft die Methode alle registrierten Elemente.</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.ValidCssClass">
      <summary>Ruft den Namen der Klasse ab, die zum Angeben des Aussehens der Anzeige von Fehlermeldungen verwendet wird, wenn Fehler aufgetreten sind.Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
      <returns>Der Name.</returns>
    </member>
    <member name="T:System.Web.WebPages.Validator">
      <summary>Definiert Überprüfungstests, die mithilfe der Methode <see cref="M:System.Web.WebPages.ValidationHelper.Add(System.String,System.Web.WebPages.IValidator[])" /> registriert werden können.</summary>
    </member>
    <member name="M:System.Web.WebPages.Validator.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.Validator" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.WebPages.Validator.DateTime(System.String)">
      <summary>Definiert einen Überprüfungstest, der testet, ob ein Wert als Datums-/Uhrzeitwert behandelt werden kann.</summary>
      <returns>Der Überprüfungstest.</returns>
      <param name="errorMessage">Die Fehlermeldung, die bei einem Überprüfungsfehler angezeigt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Decimal(System.String)">
      <summary>Definiert einen Überprüfungstest, der testet, ob ein Wert als Dezimalwert behandelt werden kann.</summary>
      <returns>Der Überprüfungstest.</returns>
      <param name="errorMessage">Die Fehlermeldung, die bei einem Überprüfungsfehler angezeigt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.EqualsTo(System.String,System.String)">
      <summary>Definiert einen Überprüfungstest, der die Benutzereingabe anhand des Werts eines anderen Felds testet.</summary>
      <returns>Der Überprüfungstest.</returns>
      <param name="otherFieldName">Das andere Feld, das verglichen werden soll.</param>
      <param name="errorMessage">Die Fehlermeldung, die bei einem Überprüfungsfehler angezeigt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Float(System.String)">
      <summary>Definiert einen Überprüfungstest, der testet, ob ein Wert als Gleitkommawert behandelt werden kann.</summary>
      <returns>Der Überprüfungstest.</returns>
      <param name="errorMessage">Die Fehlermeldung, die bei einem Überprüfungsfehler angezeigt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Integer(System.String)">
      <summary>Definiert einen Überprüfungstest, der testet, ob ein Wert als ganzzahliger Wert behandelt werden kann.</summary>
      <returns>Der Überprüfungstest.</returns>
      <param name="errorMessage">Die Fehlermeldung, die bei einem Überprüfungsfehler angezeigt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Range(System.Double,System.Double,System.String)">
      <summary>Definiert einen Überprüfungstest, der testet, ob ein Dezimalwert in einen angegebenen Bereich fällt.</summary>
      <returns>Der Überprüfungstest.</returns>
      <param name="minValue">Der minimale Wert.Der Standardwert ist 0.</param>
      <param name="maxValue">Der maximale Wert.</param>
      <param name="errorMessage">Die Fehlermeldung, die bei einem Überprüfungsfehler angezeigt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Range(System.Int32,System.Int32,System.String)">
      <summary>Definiert einen Überprüfungstest, der testet, ob ein ganzzahliger Wert in einen angegebenen Bereich fällt.</summary>
      <returns>Der Überprüfungstest.</returns>
      <param name="minValue">Der minimale Wert.Der Standardwert ist 0.</param>
      <param name="maxValue">Der Maximalwert. </param>
      <param name="errorMessage">Die Fehlermeldung, die bei einem Überprüfungsfehler angezeigt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Regex(System.String,System.String)">
      <summary>Definiert einen Überprüfungstest, der einen Wert anhand eines Musters testet, das als regulärer Ausdruck angegeben wird.</summary>
      <returns>Der Überprüfungstest.</returns>
      <param name="pattern">Der reguläre Ausdruck, der zum Testen der Benutzereingabe verwendet werden soll.</param>
      <param name="errorMessage">Die Fehlermeldung, die bei einem Überprüfungsfehler angezeigt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Required(System.String)">
      <summary>Definiert einen Überprüfungstest, der testet, ob ein Wert bereitgestellt wurde.</summary>
      <returns>Der Überprüfungstest.</returns>
      <param name="errorMessage">Die Fehlermeldung, die bei einem Überprüfungsfehler angezeigt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.StringLength(System.Int32,System.Int32,System.String)">
      <summary>Definiert einen Überprüfungstest, der die Länge einer Zeichenfolge testet.</summary>
      <returns>Der Überprüfungstest.</returns>
      <param name="maxLength">Die maximale Länge der Zeichenfolge.</param>
      <param name="minLength">Die minimale Länge der Zeichenfolge.Der Standardwert ist 0.</param>
      <param name="errorMessage">Die Fehlermeldung, die bei einem Überprüfungsfehler angezeigt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Url(System.String)">
      <summary>Definiert einen Überprüfungstest, der testet, ob ein Wert eine wohlgeformte URL darstellt.</summary>
      <returns>Der Überprüfungstest.</returns>
      <param name="errorMessage">Die Fehlermeldung, die bei einem Überprüfungsfehler angezeigt werden soll.</param>
    </member>
    <member name="T:System.Web.WebPages.VirtualPathFactoryManager">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.CreateInstance(System.String)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.Exists(System.String)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.RegisterVirtualPathFactory(System.Web.WebPages.IVirtualPathFactory)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</summary>
    </member>
    <member name="T:System.Web.WebPages.WebPage">
      <summary>Stellt eine ASP.NET Razor-Seite dar.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPage.#ctor">
      <summary>Wird aus einer abgeleiteten Klasse zum Erstellen einer neuen Instanz aufgerufen, die auf der Klasse <see cref="T:System.Web.WebPages.WebPage" /> basiert.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Context">
      <summary>Ruft das <see cref="T:System.Web.HttpContextBase" />-Objekt ab, das einer Seite zugeordnet ist, oder legt dieses Objekt fest.</summary>
      <returns>Die aktuellen Kontextdaten.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.ExecutePageHierarchy">
      <summary>Führt den Code in einer Sammlung abhängiger Seiten aus.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Html">
      <summary>Ruft das <see cref="T:System.Web.WebPages.Html.HtmlHelper" />-Objekt ab, das einer Seite zugeordnet ist.</summary>
      <returns>Ein Objekt, das HTML-Formularsteuerelemente auf einer Seite rendern kann.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.InitializePage">
      <summary>Initialisiert ein Objekt, das aus der Klasse <see cref="T:System.Web.WebPages.WebPage" /> erbt.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Model">
      <summary>Ruft das Modell ab, das einer Seite zugeordnet ist.</summary>
      <returns>Ein Objekt, das ein Modell darstellt, das den Sichtdaten für eine Seite zugeordnet ist.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPage.ModelState">
      <summary>Ruft den Zustand des Modells ab, das einer Seite zugeordnet ist.</summary>
      <returns>Der Zustand des Modells.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.RegisterPageExecutor(System.Web.WebPages.IWebPageRequestExecutor)">
      <summary>Fügt eine Klasse einer Liste von Klassen hinzu, die die Seitenausführung verarbeiten und benutzerdefinierte Funktionen für Seiten implementieren.</summary>
      <param name="executor">Die hinzuzufügende Klasse.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPage.RenderPage(System.String,System.Object[])">
      <summary>Rendert eine Inhaltsseite.</summary>
      <returns>Ein Objekt, das die Ausgabe der Seite schreiben kann.</returns>
      <param name="path">Der Pfad der zu rendernden Seite.</param>
      <param name="data">Die Daten, die an die Seite übergeben werden sollen.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Validation">
      <summary>Ruft den Überprüfungshelfer für den aktuellen Seitenkontext ab.</summary>
      <returns>Der Überprüfungshelfer.</returns>
    </member>
    <member name="T:System.Web.WebPages.WebPageBase">
      <summary>Dient als Basisklasse für Klassen, die eine ASP.NET Razor-Seite darstellen.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.#ctor">
      <summary>Initialisiert die Klasse <see cref="T:System.Web.WebPages.WebPageBase" /> für die Verwendung durch eine vererbte Klasseninstanz.Dieser Konstruktor kann nur durch eine vererbte Klasse aufgerufen werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>Konfiguriert bei Außerkraftsetzung in einer abgeleiteten Klasse die aktuelle Webseite basierend auf der Konfiguration der übergeordneten Webseite.</summary>
      <param name="parentPage">Die übergeordnete Seite, aus der die Konfigurationsinformationen gelesen werden sollen.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.CreateInstanceFromVirtualPath(System.String)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Web.WebPages.WebPageBase" />-Klasse mithilfe des angegebenen virtuellen Pfads.</summary>
      <returns>Das neue <see cref="T:System.Web.WebPages.WebPageBase" />-Objekt.</returns>
      <param name="virtualPath">Der virtuelle Pfad, der zum Erstellen der Instanz verwendet werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.CreatePageFromVirtualPath(System.String,System.Web.HttpContextBase,System.Func{System.String,System.Boolean},System.Web.WebPages.DisplayModeProvider,System.Web.WebPages.IDisplayMode)">
      <summary>Versucht, eine WebPageBase-Instanz aus einem virtualPath zu erstellen und kapselt komplexe Compilerausnahmen in einfachere Nachrichten</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.DefineSection(System.String,System.Web.WebPages.SectionWriter)">
      <summary>Wird von Inhaltsseiten zum Erstellen benannter Inhaltsabschnitte aufgerufen.</summary>
      <param name="name">Der Name des zu erstellenden Abschnitts.</param>
      <param name="action">Der Aktionstyp, der mit dem neuen Abschnitt ausgeführt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy">
      <summary>Führt den Code in einer Sammlung abhängiger Webseiten aus.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy(System.Web.WebPages.WebPageContext,System.IO.TextWriter)">
      <summary>Führt den Code in einer Sammlung abhängiger Webseiten mithilfe der angegebenen Parameter aus.</summary>
      <param name="pageContext">Die Kontextdaten für die Seite.</param>
      <param name="writer">Der Writer, der zum Schreiben des ausgeführten HTMLs verwendet werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy(System.Web.WebPages.WebPageContext,System.IO.TextWriter,System.Web.WebPages.WebPageRenderingBase)">
      <summary>Führt den Code in einer Sammlung abhängiger Webseiten mithilfe des angegebenen Kontexts, des Writers und der Startseite aus.</summary>
      <param name="pageContext">Die Kontextdaten für die Seite.</param>
      <param name="writer">Der Writer, der zum Schreiben des ausgeführten HTMLs verwendet werden soll.</param>
      <param name="startPage">Die Seite, auf der die Ausführung in der Seitenhierarchie gestartet werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.GetOutputWriter">
      <summary>Gibt die Textwriterinstanz zurück, die zum Rendern der Seite verwendet wird.</summary>
      <returns>Der Textwriter.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.InitializePage">
      <summary>Initialisiert die aktuelle Seite.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.IsSectionDefined(System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob der angegebene Abschnitt auf der Seite definiert ist.</summary>
      <returns>true, wenn der angegebene Abschnitt auf der Seite definiert ist, andernfalls false.</returns>
      <param name="name">Der Name des zu suchenden Abschnitts.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Layout">
      <summary>Ruft den virtuellen Pfad einer Layoutseite ab oder legt diesen fest.</summary>
      <returns>Der Pfad der Layoutseite.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Output">
      <summary>Ruft das aktuelle <see cref="T:System.IO.TextWriter" />-Objekt für die Seite ab.</summary>
      <returns>Das <see cref="T:System.IO.TextWriter" />-Objekt.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.OutputStack">
      <summary>Ruft den Stapel des <see cref="T:System.IO.TextWriter" />-Objekts für den aktuellen Seitenkontext ab.</summary>
      <returns>Das <see cref="T:System.IO.TextWriter" />-Objekt.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Page">
      <summary>Stellt eigenschaftenähnlichen Zugriff auf Daten der Seite zur Verfügung, die für Seiten, Layoutseiten und Teilseiten gemeinsam verwendet werden.</summary>
      <returns>Ein Objekt, das Daten der Seite enthält.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.PageData">
      <summary>Stellt arrayähnlichen Zugriff auf Daten der Seite zur Verfügung, die für Seiten, Layoutseiten und Teilseiten gemeinsam verwendet werden.</summary>
      <returns>Ein Wörterbuch, das Daten der Seite enthält.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.PopContext">
      <summary>Gibt den Kontext oben aus der <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" />-Instanz zurück und entfernt ihn.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.PushContext(System.Web.WebPages.WebPageContext,System.IO.TextWriter)">
      <summary>Fügt den angegebenen Kontext oben in der <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" />-Instanz ein.</summary>
      <param name="pageContext">Der Seitenkontext, der mittels Push in die <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" />-Instanz verschoben werden soll.</param>
      <param name="writer">Der Writer für den Seitenkontext.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderBody">
      <summary>Rendert auf Layoutseiten den Teil der Inhaltsseite, der sich nicht in einem benannten Abschnitt befindet.</summary>
      <returns>Der zu rendernde HTML-Inhalt.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderPage(System.String,System.Object[])">
      <summary>Rendert den Inhalt einer Seite innerhalb einer anderen Seite.</summary>
      <returns>Der zu rendernde HTML-Inhalt.</returns>
      <param name="path">Der Pfad der zu rendernden Seite.</param>
      <param name="data">(Optional) Ein Array aus Daten, die an die Seite übergeben werden sollen, die gerendert wird.Auf der gerenderten Seite kann auf diese Parameter mithilfe der Eigenschaft <see cref="P:System.Web.WebPages.WebPageBase.PageData" /> zugegriffen werden.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderSection(System.String)">
      <summary>Rendert auf Layoutseiten den Inhalt des benannten Abschnitts.</summary>
      <returns>Der zu rendernde HTML-Inhalt.</returns>
      <param name="name">Der zu rendernde Abschnitt.</param>
      <exception cref="T:System.Web.HttpException">Der <paramref name="name" />-Abschnitt wurde bereits gerendert.– oder –Der <paramref name="name" />-Abschnitt wurde als erforderlich gekennzeichnet, aber nicht gefunden.</exception>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderSection(System.String,System.Boolean)">
      <summary>Rendert auf Layoutseiten den Inhalt eines benannten Abschnitts und gibt an, ob der Abschnitt erforderlich ist.</summary>
      <returns>Der zu rendernde HTML-Inhalt.</returns>
      <param name="name">Der zu rendernde Abschnitt.</param>
      <param name="required">true, um anzugeben, dass der Abschnitt erforderlich ist, andernfalls false.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.Write(System.Object)">
      <summary>Schreibt das angegebene Objekt als HTML-codierte Zeichenfolge.</summary>
      <param name="value">Das Objekt, das codiert und geschrieben werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.Write(System.Web.WebPages.HelperResult)">
      <summary>Schreibt das angegebene <see cref="T:System.Web.WebPages.HelperResult" />-Objekt als HTML-codierte Zeichenfolge.</summary>
      <param name="result">Das Hilfsprogrammergebnis, das codiert und geschrieben werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.WriteLiteral(System.Object)">
      <summary>Schreibt das angegebene Objekt, ohne es zuerst als HTML zu codieren.</summary>
      <param name="value">Das zu schreibende Objekt.</param>
    </member>
    <member name="T:System.Web.WebPages.WebPageContext">
      <summary>Enthält Daten, die von einem <see cref="T:System.Web.WebPages.WebPage" />-Objekt verwendet werden, um auf Details zur Webanwendung, die aktuelle HTTP-Anforderung, den aktuellen Ausführungskontext und Daten zum Seitenrendering zu verweisen.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.WebPageContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageContext.#ctor(System.Web.HttpContextBase,System.Web.WebPages.WebPageRenderingBase,System.Object)">
      <summary>Initialisiert eine neue Instanz der Klasse mithilfe des angegebenen Kontexts, der Seite und des Modells.</summary>
      <param name="context">Die HTTP-Anforderungskontextdaten, die dem Seitenkontext zugeordnet werden sollen.</param>
      <param name="page">Die Daten der Seite, die für Seiten, Layoutseiten und Teilseiten gemeinsam verwendet werden sollen.</param>
      <param name="model">Das Modell, das den Sichtdaten zugeordnet werden soll.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Current">
      <summary>Ruft einen Verweis auf das aktuelle <see cref="T:System.Web.WebPages.WebPageContext" />-Objekt ab, das einer Seite zugeordnet ist.</summary>
      <returns>Das aktuelle Seitenkontextobjekt.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Model">
      <summary>Ruft das Modell ab, das einer Seite zugeordnet ist.</summary>
      <returns>Ein Objekt, das ein Modell darstellt, das den Sichtdaten für eine Seite zugeordnet ist.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Page">
      <summary>Ruft das <see cref="T:System.Web.WebPages.WebPageRenderingBase" />-Objekt ab, das einer Seite zugeordnet ist.</summary>
      <returns>Das Objekt, das die Seite rendert.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.PageData">
      <summary>Ruft die Daten der Seite ab, die für Seiten, Layoutseiten und Teilseiten gemeinsam verwendet werden.</summary>
      <returns>Ein Wörterbuch, das Daten der Seite enthält.</returns>
    </member>
    <member name="T:System.Web.WebPages.WebPageExecutingBase">
      <summary>Stellt Objekte und Methoden zur Verfügung, die zum Ausführen und Rendern von ASP.NET-Seiten verwendet werden, die Razor-Syntax enthalten.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.WebPageExecutingBase" />-Klasse.Dieser Konstruktor kann nur durch eine vererbte Klasse aufgerufen werden.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.App"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.AppState"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.Context">
      <summary>Wenn dieses Element in einer abgeleiteten Klasse außer Kraft gesetzt wird, wird das <see cref="T:System.Web.HttpContextBase" />-Objekt abgerufen oder festgelegt, das einer Seite zugeordnet ist.</summary>
      <returns>Die aktuellen Kontextdaten.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Execute"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.GetOutputWriter">
      <summary>Gibt die Textwriterinstanz zurück, die zum Rendern der Seite verwendet wird.</summary>
      <returns>Der Textwriter.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Href(System.String,System.Object[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.NormalizeLayoutPagePath(System.String)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.NormalizePath(System.String)"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.VirtualPath"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.VirtualPathFactory"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Write(System.Object)">
      <summary>Schreibt die Zeichenfolgendarstellung des angegebenen Objekts als HTML-codierte Zeichenfolge.</summary>
      <param name="value">Das Objekt, das codiert und geschrieben werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Write(System.Web.WebPages.HelperResult)">
      <summary>Schreibt das angegebene <see cref="T:System.Web.WebPages.HelperResult" />-Objekt als HTML-codierte Zeichenfolge.</summary>
      <param name="result">Das Hilfsprogrammergebnis, das codiert und geschrieben werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttribute(System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttributeTo(System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttributeTo(System.String,System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteLiteral(System.Object)">
      <summary>Schreibt das angegebene Objekt ohne HTML-Codierung.</summary>
      <param name="value">Das zu schreibende Objekt.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteLiteralTo(System.IO.TextWriter,System.Object)">
      <summary>Schreibt das angegebene Objekt ohne HTML-Codierung in die angegebene <see cref="T:System.IO.TextWriter" />-Instanz.</summary>
      <param name="writer">Der Textwriter.</param>
      <param name="content">Das zu schreibende Objekt.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteTo(System.IO.TextWriter,System.Object)">
      <summary>Schreibt das angegebene Objekt als HTML-codierte Zeichenfolge in den angegebenen Textwriter.</summary>
      <param name="writer">Der Textwriter.</param>
      <param name="content">Das Objekt, das codiert und geschrieben werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>Schreibt das angegebene <see cref="T:System.Web.WebPages.HelperResult" />-Objekt als HTML-codierte Zeichenfolge in den angegebenen Textwriter.</summary>
      <param name="writer">Der Textwriter.</param>
      <param name="content">Das Hilfsprogrammergebnis, das codiert und geschrieben werden soll.</param>
    </member>
    <member name="T:System.Web.WebPages.WebPageHttpHandler">
      <summary>Stellt Methoden und Eigenschaften zur Verfügung, die für die Verarbeitung bestimmter URL-Erweiterungen verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.#ctor(System.Web.WebPages.WebPage)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.WebPageHttpHandler" />-Klasse mithilfe der angegebenen Webseite.</summary>
      <param name="webPage">Die zu verarbeitende Webseite.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPage" /> ist null.</exception>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.CreateFromVirtualPath(System.String)">
      <summary>Erstellt ein neues <see cref="T:System.Web.IHttpHandler" />-Handlerobjekt aus dem angegebenen virtuellen Pfad.</summary>
      <returns>Ein <see cref="T:System.Web.IHttpHandler" />-Objekt für den angegebenen virtuellen Pfad.</returns>
      <param name="virtualPath">Der virtuelle Pfad, der zum Erstellen des Handlers verwendet werden soll.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageHttpHandler.DisableWebPagesResponseHeader">
      <summary>Ruft einen Wert ab, der angibt, ob Webseiten-Antwortheader deaktiviert sind, oder legt diesen Wert fest.</summary>
      <returns>true, wenn Webseiten-Antwortheader deaktiviert sind, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.GetRegisteredExtensions">
      <summary>Gibt eine Liste mit Dateinamenerweiterungen zurück, die die aktuelle <see cref="T:System.Web.WebPages.WebPageHttpHandler" />-Instanz verarbeiten kann.</summary>
      <returns>Eine schreibgeschützte Liste mit Dateinamenerweiterungen, die von der aktuellen <see cref="T:System.Web.WebPages.WebPageHttpHandler" />-Instanz verarbeitet werden.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageHttpHandler.IsReusable">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Web.WebPages.WebPageHttpHandler" />-Instanz von einer anderen Anforderung verwendet werden kann.</summary>
      <returns>true, wenn die <see cref="T:System.Web.WebPages.WebPageHttpHandler" />-Instanz wiederverwendet werden kann, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Verarbeitet die Webseite mithilfe des angegebenen Kontexts.</summary>
      <param name="context">Der Kontext, der beim Verarbeiten der Webseite verwendet werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.RegisterExtension(System.String)">
      <summary>Fügt der Liste der Erweiterungen, die von der aktuellen <see cref="T:System.Web.WebPages.WebPageHttpHandler" />-Instanz verarbeitet wird, eine Dateinamenerweiterung hinzu.</summary>
      <param name="extension">Die hinzuzufügende Erweiterung ohne einen führenden Punkt.</param>
    </member>
    <member name="F:System.Web.WebPages.WebPageHttpHandler.WebPagesVersionHeaderName">
      <summary>Der HTML-Tagname (X-AspNetWebPages-Version) für die Version der ASP.NET Web Pages-Spezifikation, die von dieser Webseite verwendet wird.</summary>
    </member>
    <member name="T:System.Web.WebPages.WebPageRenderingBase">
      <summary>Stellt Methoden und Eigenschaften zur Verfügung, die zum Rendern von Seiten verwendet werden, die das Razor-Anzeigemodul verwenden.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.WebPageRenderingBase" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Cache"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Culture"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.DisplayMode"></member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.ExecutePageHierarchy">
      <summary>Ruft bei Außerkraftsetzung in einer abgeleiteten Klasse die Methoden auf, die zum Initialisieren der Seite verwendet werden.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.IsAjax"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.IsPost"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Layout">
      <summary>Wenn dieses Element in einer abgeleiteten Klasse außer Kraft gesetzt wird, wird der Pfad einer Layoutseite abgerufen oder festgelegt.</summary>
      <returns>Der Pfad der Layoutseite.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Page">
      <summary>Wenn dieses Element in einer abgeleiteten Klasse außer Kraft gesetzt wird, wird eigenschaftenähnlicher Zugriff auf Daten der Seite bereitgestellt, die für Seiten, Layoutseiten und Teilseiten gemeinsam verwendet werden.</summary>
      <returns>Ein Objekt, das Daten der Seite enthält.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.PageContext"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.PageData">
      <summary>Wenn dieses Element in einer abgeleiteten Klasse außer Kraft gesetzt wird, wird arrayähnlicher Zugriff auf Daten der Seite bereitgestellt, die für Seiten, Layoutseiten und Teilseiten gemeinsam verwendet werden.</summary>
      <returns>Ein Objekt, das arrayähnlichen Zugriff auf Daten der Seite bereitstellt.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Profile"></member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.RenderPage(System.String,System.Object[])">
      <summary>Rendert bei Außerkraftsetzung in einer abgeleiteten Klasse eine Webseite.</summary>
      <returns>Das Markup, das die Webseite darstellt.</returns>
      <param name="path">Der Pfad der zu rendernden Seite.</param>
      <param name="data">Weitere Daten, die zum Rendern der Seite verwendet werden.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Request"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Response"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Server"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Session"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.TemplateInfo"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.UICulture"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.UrlData"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.User"></member>
    <member name="T:System.Web.WebPages.Html.HtmlHelper">
      <summary>Stellt Unterstützung für das Rendern von HTML-Formularsteuerelementen und die Ausführung von Formularüberprüfung auf einer Webseite zur Verfügung.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>Erstellt ein Wörterbuch mit HTML-Attributen aus dem Eingabeobjekt und übersetzt Unterstriche zu Bindestrichen.</summary>
      <returns>Ein Wörterbuch, das HTML-Attribute abbildet.</returns>
      <param name="htmlAttributes">Ein anonymes Objekt, das HTML-Attribute beschreibt.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AttributeEncode(System.Object)">
      <summary>Gibt eine HTML-codierte Zeichenfolge zurück, die das angegebene Objekt mithilfe minimaler Codierung darstellt, die sich nur für HTML-Attribute eignet, die in Anführungszeichen eingeschlossen sind.</summary>
      <returns>Eine HTML-codierte Zeichenfolge, die das Objekt darstellt.</returns>
      <param name="value">Das zu verschlüsselnde Objekt.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AttributeEncode(System.String)">
      <summary>Gibt eine HTML-codierte Zeichenfolge zurück, die die angegebene Zeichenfolge mithilfe minimaler Codierung darstellt, die sich nur für HTML-Attribute eignet, die in Anführungszeichen eingeschlossen sind.</summary>
      <returns>Eine HTML-codierte Zeichenfolge, die die ursprüngliche Zeichenfolge darstellt.</returns>
      <param name="value">Die zu codierende Zeichenfolge.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String)">
      <summary>Gibt ein HTML-Kontrollkästchensteuerelement mit dem angegebenen Namen zurück.</summary>
      <returns>Das HTML-Markup, das das Kontrollkästchensteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean)">
      <summary>Gibt ein HTML-Kontrollkästchensteuerelement mit dem angegebenen Namen und dem überprüften Standardstatus zurück.</summary>
      <returns>Das HTML-Markup, das das Kontrollkästchensteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="isChecked">true, um anzugeben, dass das Attribut checked auf checked festgelegt ist, andernfalls false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Kontrollkästchensteuerelement mit dem angegebenen Namen, dem überprüften Standardstatus und den benutzerdefinierten Attributen zurück, die durch ein Attributwörterbuch definiert werden.</summary>
      <returns>Das HTML-Markup, das das Kontrollkästchensteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="isChecked">true, um anzugeben, dass das Attribut checked auf checked festgelegt ist, andernfalls false.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean,System.Object)">
      <summary>Gibt ein HTML-Kontrollkästchensteuerelement mit dem angegebenen Namen, dem überprüften Standardstatus und den benutzerdefinierten Attributen zurück, die durch ein Attributobjekt definiert werden.</summary>
      <returns>Das HTML-Markup, das das Kontrollkästchensteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="isChecked">true, um anzugeben, dass das Attribut checked auf checked festgelegt ist, andernfalls false.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Kontrollkästchensteuerelement mit dem angegebenen Namen und den benutzerdefinierten Attributen zurück, die durch ein Attributwörterbuch definiert werden.</summary>
      <returns>Das HTML-Markup, das das Kontrollkästchensteuerelement darstellt.</returns>
      <param name="name"> Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Object)">
      <summary>Gibt ein HTML-Kontrollkästchensteuerelement mit dem angegebenen Namen und den benutzerdefinierten Attributen zurück, die durch ein Attributobjekt definiert werden.</summary>
      <returns>Das HTML-Markup, das das Kontrollkästchensteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Gibt ein HTML-Dropdownlisten-Steuerelement mit dem angegebenen Namen zurück, das die angegebenen Listeneinträge enthält.</summary>
      <returns>Das HTML-Markup, das das Dropdownlisten-Steuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Dropdownlisten-Steuerelement mit dem angegebenen Namen und den durch ein Attributwörterbuch definierten benutzerdefinierten Attributen zurück, das die angegebenen Listeneinträge enthält.</summary>
      <returns>Das HTML-Markup, das das Dropdownlisten-Steuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Gibt ein HTML-Dropdownlisten-Steuerelement mit dem angegebenen Namen und den durch ein Attributobjekt definierten benutzerdefinierten Attributen zurück, das die angegebenen Listeneinträge enthält.</summary>
      <returns>Das HTML-Markup, das das Dropdownlisten-Steuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Gibt ein HTML-Dropdownlisten-Steuerelement mit dem angegebenen Namen zurück, das die angegebenen Listeneinträge und den Standardeintrag enthält.</summary>
      <returns>Das HTML-Markup, das das Dropdownlisten-Steuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="defaultOption">Der für die Standardoption in der Liste anzuzeigende Text.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Dropdownlisten-Steuerelement mit dem angegebenen Namen und den durch ein Attributwörterbuch definierten benutzerdefinierten Attributen zurück, das die angegebenen Listeneinträge und den Standardeintrag enthält.</summary>
      <returns>Das HTML-Markup, das das Dropdownlisten-Steuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="defaultOption">Der für die Standardoption in der Liste anzuzeigende Text.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Gibt ein HTML-Dropdownlisten-Steuerelement mit dem angegebenen Namen und den durch ein Attributobjekt definierten benutzerdefinierten Attributen zurück, das die angegebenen Listeneinträge und den Standardeintrag enthält.</summary>
      <returns>Das HTML-Markup, das das Dropdownlisten-Steuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="defaultOption">Der für die Standardoption in der Liste anzuzeigende Text.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Dropdownlisten-Steuerelement mit dem angegebenen Namen, den durch ein Attributwörterbuch definierten benutzerdefinierten Attributen und der Standardauswahl zurück, das die angegebenen Listeneinträge und den Standardeintrag enthält.</summary>
      <returns>Das HTML-Markup, das das Dropdownlisten-Steuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="defaultOption">Der für die Standardoption in der Liste anzuzeigende Text.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="selectedValue">Der Wert, der den Eintrag in der Liste angibt, der standardmäßig ausgewählt ist.Der ausgewählte Eintrag ist der erste Eintrag in der Liste, dessen Wert mit dem Parameter übereinstimmt (oder dessen Text übereinstimmt, wenn kein Wert vorhanden ist).</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Object)">
      <summary>Gibt ein HTML-Dropdownlisten-Steuerelement mit dem angegebenen Namen, den durch ein Attributobjekt definierten benutzerdefinierten Attributen und der Standardauswahl zurück, das die angegebenen Listeneinträge und den Standardeintrag enthält.</summary>
      <returns>Das HTML-Markup, das das Dropdownlisten-Steuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="defaultOption">Der für die Standardoption in der Liste anzuzeigende Text.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="selectedValue">Der Wert, der den Eintrag in der Liste angibt, der standardmäßig ausgewählt ist.Der ausgewählte Eintrag ist der erste Eintrag in der Liste, der einen übereinstimmenden Wert aufweist oder mit dem angezeigten Text des Eintrags übereinstimmt, wenn der Eintrag keinen Wert besitzt.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Encode(System.Object)">
      <summary>Gibt eine HTML-codierte Zeichenfolge mithilfe einer vollständigen Codierung zurück, die sich für beliebiges HTML eignet, die das angegebene Objekt darstellt.</summary>
      <returns>Eine HTML-codierte Zeichenfolge, die das Objekt darstellt.</returns>
      <param name="value">Das zu verschlüsselnde Objekt.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Encode(System.String)">
      <summary>Gibt eine HTML-codierte Zeichenfolge mithilfe einer vollständigen Codierung zurück, die sich für beliebiges HTML eignet, die die angegebene Zeichenfolge darstellt.</summary>
      <returns>Eine HTML-codierte Zeichenfolge, die die ursprüngliche Zeichenfolge darstellt.</returns>
      <param name="value">Die zu codierende Zeichenfolge.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String)">
      <summary>Gibt ein verborgenes HTML-Steuerelement mit dem angegebenen Namen zurück.</summary>
      <returns>Das HTML-Markup, das das verborgene Steuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object)">
      <summary>Gibt ein verborgenes HTML-Steuerelement mit dem angegebenen Namen und Wert zurück.</summary>
      <returns>Das HTML-Markup, das das verborgene Steuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein verborgenes HTML-Steuerelement mit dem angegebenen Namen, dem Wert und den benutzerdefinierten Attributen zurück, die durch ein Attributwörterbuch definiert werden.</summary>
      <returns>Das HTML-Markup, das das verborgene Steuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object,System.Object)">
      <summary>Gibt ein verborgenes HTML-Steuerelement mit dem angegebenen Namen, dem Wert und den benutzerdefinierten Attributen zurück, die durch ein Attributobjekt definiert werden.</summary>
      <returns>Das HTML-Markup, das das verborgene Steuerelement darstellt.</returns>
      <param name="name"> Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.IdAttributeDotReplacement">
      <summary>Ruft das Zeichen ab, das den Punkt (.) im Attribut id gerenderter Formularsteuerelemente ersetzt, oder legt dieses fest.</summary>
      <returns>Das Zeichen, das verwendet wird, um den Punkt (.) im Attribut id gerenderter Formularsteuerelemente zu ersetzen.Der Standardwert ist ein Unterstrich (_).</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String)">
      <summary>Gibt eine HTML-Beschriftung zurück, die den angegebenen Text anzeigt.</summary>
      <returns>Das HTML-Markup, das die Beschriftung darstellt.</returns>
      <param name="labelText">Der anzuzeigende Text.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.Object)">
      <summary>Gibt eine HTML-Beschriftung zurück, die den angegebenen Text anzeigt und die angegebenen benutzerdefinierten Attribute besitzt.</summary>
      <returns>Das HTML-Markup, das die Beschriftung darstellt.</returns>
      <param name="labelText">Der anzuzeigende Text.</param>
      <param name="attributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String)">
      <summary>Gibt eine HTML-Beschriftung zurück, die den angegebenen Text anzeigt und das angegebene for-Attribut besitzt.</summary>
      <returns>Das HTML-Markup, das die Beschriftung darstellt.</returns>
      <param name="labelText">Der anzuzeigende Text.</param>
      <param name="labelFor">Der Wert, der dem Attribut for des HTML-Steuerelements zugewiesen werden soll.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt eine HTML-Beschriftung zurück, die den angegebenen Text anzeigt, das angegebene for-Attribut sowie die durch ein Benutzerwörterbuch definierten benutzerdefinierten Attribute besitzt.</summary>
      <returns>Das HTML-Markup, das die Beschriftung darstellt.</returns>
      <param name="labelText">Der anzuzeigende Text.</param>
      <param name="labelFor">Der Wert, der dem Attribut for des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="attributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String,System.Object)">
      <summary>Gibt eine HTML-Beschriftung zurück, die den angegebenen Text anzeigt, das angegebene for-Attribut sowie die durch ein Benutzerobjekt definierten benutzerdefinierten Attribute besitzt.</summary>
      <returns>Das HTML-Markup, das die Beschriftung darstellt.</returns>
      <param name="labelText">Der anzuzeigende Text.</param>
      <param name="labelFor">Der Wert, der dem Attribut for des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="attributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Gibt ein HTML-Listenfeldsteuerelement mit dem angegebenen Namen zurück, das die angegebenen Listeneinträge enthält.</summary>
      <returns>Das HTML-Markup, das das Listenfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Listenfeldsteuerelement mit dem angegebenen Namen und den durch ein Attributwörterbuch definierten benutzerdefinierten Attributen zurück, das die angegebenen Listeneinträge enthält.</summary>
      <returns>Das HTML-Markup, das das Listenfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Gibt ein HTML-Listenfeldsteuerelement mit dem angegebenen Namen und den durch ein Attributobjekt definierten benutzerdefinierten Attributen zurück, das die angegebenen Listeneinträge enthält.</summary>
      <returns>Das HTML-Markup, das das Listenfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean)">
      <summary>Gibt ein HTML-Listenfeldsteuerelement mit dem angegebenen Namen, der Größe, den Listeneinträgen und der Standardauswahl zurück. Gibt außerdem an, ob Mehrfachauswahl aktiviert ist.</summary>
      <returns>Das HTML-Markup, das das Listenfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="selectedValues">Ein Objekt, das die Einträge in der Liste angibt, der standardmäßig ausgewählt sind.Die Auswahl wird durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <param name="size">Der Wert, der dem Attribut size des Elements zugewiesen werden soll.</param>
      <param name="allowMultiple">true, um anzugeben, dass Mehrfachauswahl aktiviert ist, andernfalls false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Gibt ein HTML-Listenfeldsteuerelement mit dem angegebenen Namen zurück, das die angegebenen Listeneinträge und den Standardeintrag enthält.</summary>
      <returns>Das HTML-Markup, das das Listenfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="defaultOption">Der für die Standardoption in der Liste anzuzeigende Text.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen des Listenfelds mit Daten verwendet werden.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Listenfeldsteuerelement mit dem angegebenen Namen und den durch ein Attributwörterbuch definierten benutzerdefinierten Attributen zurück, das die angegebenen Listeneinträge und den Standardeintrag enthält.</summary>
      <returns>Das HTML-Markup, das das Listenfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="defaultOption">Der für die Standardoption in der Liste anzuzeigende Text.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Gibt ein HTML-Listenfeldsteuerelement mit dem angegebenen Namen und den durch ein Attributobjekt definierten benutzerdefinierten Attributen zurück, das die angegebenen Listeneinträge und den Standardeintrag enthält.</summary>
      <returns>Das HTML-Markup, das das Listenfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="defaultOption">Der für die Standardoption in der Liste anzuzeigende Text.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen des Listenfelds mit Daten verwendet werden.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Listenfeldsteuerelement mit dem angegebenen Namen und den durch ein Attributwörterbuch definierten benutzerdefinierten Attributen zurück, das die angegebenen Listeneinträge, den Standardeintrag und die Auswahl enthält.</summary>
      <returns>Das HTML-Markup, das das Listenfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="defaultOption">Der für die Standardoption in der Liste anzuzeigende Text.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="selectedValues">Ein Objekt, das die Einträge in der Liste angibt, der standardmäßig ausgewählt sind.Die Auswahl wird durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean)">
      <summary>Gibt ein HTML-Listenfeldsteuerelement mit dem angegebenen Namen, der Größe, den Listeneinträgen, dem Standardeintrag und der Auswahl zurück. Gibt außerdem an, ob Mehrfachauswahl aktiviert ist.</summary>
      <returns>Das HTML-Markup, das das Listenfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="defaultOption">Der für die Standardoption in der Liste anzuzeigende Text.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="selectedValues">Ein Objekt, das die Einträge in der Liste angibt, der standardmäßig ausgewählt sind.Die Auswahl wird durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <param name="size">Der Wert, der dem Attribut size des Elements zugewiesen werden soll.</param>
      <param name="allowMultiple">true, um anzugeben, dass Mehrfachauswahl aktiviert ist, andernfalls false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Listenfeldsteuerelement mit dem angegebenen Namen, der Größe, den durch ein Attributwörterbuch definierten benutzerdefinierten Attributen, den Listeneinträgen, dem Standardeintrag und der Auswahl zurück. Gibt außerdem an, ob Mehrfachauswahl aktiviert ist.</summary>
      <returns>Das HTML-Markup, das das Listenfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="defaultOption">Der für die Standardoption in der Liste anzuzeigende Text.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="selectedValues">Ein Objekt, das die Einträge in der Liste angibt, der standardmäßig ausgewählt sind.Die Auswahl wird durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <param name="size">Der Wert, der dem Attribut size des Elements zugewiesen werden soll.</param>
      <param name="allowMultiple">true, um anzugeben, dass Mehrfachauswahl aktiviert ist, andernfalls false.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean,System.Object)">
      <summary>Gibt ein HTML-Listenfeldsteuerelement mit dem angegebenen Namen, der Größe, den durch ein Attributobjekt definierten benutzerdefinierten Attributen, den Listeneinträgen, dem Standardeintrag und der Auswahl zurück. Gibt außerdem an, ob Mehrfachauswahl aktiviert ist.</summary>
      <returns>Das HTML-Markup, das das Listenfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="defaultOption">Der für die Standardoption in der Liste anzuzeigende Text.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="selectedValues">Ein Objekt, das die Einträge in der Liste angibt, der standardmäßig ausgewählt sind.Die Auswahl wird durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <param name="size">Der Wert, der dem Attribut size des Elements zugewiesen werden soll.</param>
      <param name="allowMultiple">true, um anzugeben, dass Mehrfachauswahl aktiviert ist, andernfalls false.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Object)">
      <summary>Gibt ein HTML-Listenfeldsteuerelement mit dem angegebenen Namen, den Listeneinträgen, dem Standardeintrag und den durch ein Attributobjekt definierten benutzerdefinierten Attributen sowie der Auswahl zurück.</summary>
      <returns>Das HTML-Markup, das das Listenfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements select zugewiesen werden soll.</param>
      <param name="defaultOption">Der für die Standardoption in der Liste anzuzeigende Text.</param>
      <param name="selectList">Eine Liste der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanzen, die zum Auffüllen der Liste mit Daten verwendet werden.</param>
      <param name="selectedValues">Ein Objekt, das die Einträge in der Liste angibt, der standardmäßig ausgewählt sind.Die Auswahl wird durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ObjectToDictionary(System.Object)">
      <summary>Erstellt ein Wörterbuch aus einem Objekt, indem alle öffentlichen Instanzeigenschaften als Schlüssel mit dem entsprechenden Wert zum Wörterbuch hinzugefügt werden.Öffentliche Eigenschaften von abgeleiteten Typen werden ebenfalls bereitgestellt.Dies wird normalerweise für anonyme Objekte verwendet.</summary>
      <returns>Das erstellte Wörterbuch bestehend aus Eigenschaftsnamen und -Werten.</returns>
      <param name="value">Das zu konvertierende Objekt.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String)">
      <summary>Gibt ein HTML-Kennwortsteuerelement mit dem angegebenen Namen zurück.</summary>
      <returns>Das HTML-Markup, das das Kennwortsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object)">
      <summary>Gibt ein HTML-Kennwortsteuerelement mit dem angegebenen Namen und Wert zurück.</summary>
      <returns>Das HTML-Markup, das das Kennwortsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Kennwortsteuerelement mit dem angegebenen Namen, dem Wert und den benutzerdefinierten Attributen zurück, die durch ein Attributwörterbuch definiert werden.</summary>
      <returns>Das HTML-Markup, das das Kennwortsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object,System.Object)">
      <summary>Gibt ein HTML-Kennwortsteuerelement mit dem angegebenen Namen, dem Wert und den benutzerdefinierten Attributen zurück, die durch ein Attributobjekt definiert werden.</summary>
      <returns>Das HTML-Markup, das das Kennwortsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object)">
      <summary>Gibt ein HTML-Optionsfeldsteuerelement mit dem angegebenen Namen und Wert zurück.</summary>
      <returns>Das HTML-Markup, das das Optionsfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.Das Attribut name, die die Gruppe definiert, zu der das Optionsfeld gehört.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean)">
      <summary>Gibt ein HTML-Optionsfeldsteuerelement mit dem angegebenen Namen, dem Wert und dem standardmäßig ausgewählten Status zurück.</summary>
      <returns>Das HTML-Markup, das das Optionsfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.Das Attribut name, die die Gruppe definiert, zu der das Optionsfeld gehört.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <param name="isChecked">true, um anzugeben, dass das Steuerelement ausgewählt ist, andernfalls false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Optionsfeldsteuerelement mit dem angegebenen Namen, dem Wert, dem standardmäßig ausgewählten Status und den benutzerdefinierten Attributen zurück, die durch ein Attributwörterbuch definiert werden.</summary>
      <returns>Das HTML-Markup, das das Optionsfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.Das Attribut name, die die Gruppe definiert, zu der das Optionsfeld gehört.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <param name="isChecked">true, um anzugeben, dass das Steuerelement ausgewählt ist, andernfalls false.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean,System.Object)">
      <summary>Gibt ein HTML-Optionsfeldsteuerelement mit dem angegebenen Namen, dem Wert, dem standardmäßig ausgewählten Status und den benutzerdefinierten Attributen zurück, die durch ein Attributobjekt definiert werden.</summary>
      <returns>Das HTML-Markup, das das Optionsfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.Das Attribut name, die die Gruppe definiert, zu der das Optionsfeld gehört.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <param name="isChecked">true, um anzugeben, dass das Steuerelement ausgewählt ist, andernfalls false.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Optionsfeldsteuerelement mit dem angegebenen Namen, dem Wert und den benutzerdefinierten Attributen zurück, die durch ein Attributwörterbuch definiert werden.</summary>
      <returns>Das HTML-Markup, das das Optionsfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.Das Attribut name, die die Gruppe definiert, zu der das Optionsfeld gehört.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Object)">
      <summary>Gibt ein HTML-Optionsfeldsteuerelement mit dem angegebenen Namen, dem Wert und den benutzerdefinierten Attributen zurück, die durch ein Attributobjekt definiert werden.</summary>
      <returns>Das HTML-Markup, das das Optionsfeldsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.Das Attribut name, die die Gruppe definiert, zu der das Optionsfeld gehört.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Raw(System.Object)">
      <summary>Verwendet eine <see cref="T:System.Web.HtmlString" />-Instanz als Wrapper für HTML-Markup, damit dieses als HTML-Markup interpretiert wird.</summary>
      <returns>Das nicht codierte HTML.</returns>
      <param name="value">Das Objekt, für das HTML gerendert werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Raw(System.String)">
      <summary>Verwendet eine <see cref="T:System.Web.HtmlString" />-Instanz als Wrapper für HTML-Markup, damit dieses als HTML-Markup interpretiert wird.</summary>
      <returns>Das nicht codierte HTML.</returns>
      <param name="value">Die Zeichenfolge, die als HTML-Markup und nicht als HTML-Codierung interpretiert werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String)">
      <summary>Gibt ein HTML-Steuerelement für mehrzeilige Texteingabe (Textbereich) mit dem angegebenen Namen zurück.</summary>
      <returns>Das HTML-Markup, das das Textbereichsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements textarea zugewiesen werden soll.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Steuerelement für mehrzeilige Texteingabe (Textbereich) mit dem angegebenen Namen und den benutzerdefinierten Attributen zurück, die durch ein Attributwörterbuch definiert werden.</summary>
      <returns>Das HTML-Markup, das das Textbereichsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements textarea zugewiesen werden soll.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.Object)">
      <summary>Gibt ein HTML-Steuerelement für mehrzeilige Texteingabe (Textbereich) mit dem angegebenen Namen und den benutzerdefinierten Attributen zurück, die durch ein Attributobjekt definiert werden.</summary>
      <returns>Das HTML-Markup, das das Textbereichsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements textarea zugewiesen werden soll.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String)">
      <summary>Gibt ein HTML-Steuerelement für mehrzeilige Texteingabe (Textbereich) mit dem angegebenen Namen und Wert zurück.</summary>
      <returns>Das HTML-Markup, das das Textbereichsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements textarea zugewiesen werden soll.</param>
      <param name="value">Der anzuzeigende Text.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Steuerelement für mehrzeilige Texteingabe (Textbereich) mit dem angegebenen Namen, dem Wert und den benutzerdefinierten Attributen zurück, die durch ein Attributwörterbuch definiert werden.</summary>
      <returns>Das HTML-Markup, das das Textbereichsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements textarea zugewiesen werden soll.</param>
      <param name="value">Der anzuzeigende Text.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Steuerelement für mehrzeilige Texteingabe (Textbereich) mit dem angegebenen Namen, dem Wert, den Attributen row und col sowie den benutzerdefinierten Attributen zurück, die durch ein Attributwörterbuch definiert werden.</summary>
      <returns>Das HTML-Markup, das das Textbereichsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements textarea zugewiesen werden soll.</param>
      <param name="value">Der anzuzeigende Text.</param>
      <param name="rows">Der Wert, der dem Attribut rows des Elements zugewiesen werden soll.</param>
      <param name="columns">Der Wert, der dem Attribut cols des Elements zugewiesen werden soll.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Gibt ein HTML-Steuerelement für mehrzeilige Texteingabe (Textbereich) mit dem angegebenen Namen, dem Wert, den Attributen row und col sowie den benutzerdefinierten Attributen zurück, die durch ein Attributobjekt definiert werden.</summary>
      <returns>Das HTML-Markup, das das Textbereichsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements textarea zugewiesen werden soll.</param>
      <param name="value">Der anzuzeigende Text.</param>
      <param name="rows">Der Wert, der dem Attribut rows des Elements zugewiesen werden soll.</param>
      <param name="columns">Der Wert, der dem Attribut cols des Elements zugewiesen werden soll.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Object)">
      <summary>Gibt ein HTML-Steuerelement für mehrzeilige Texteingabe (Textbereich) mit dem angegebenen Namen, dem Wert und den benutzerdefinierten Attributen zurück, die durch ein Attributobjekt definiert werden.</summary>
      <returns>Das HTML-Markup, das das Textbereichsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Elements textarea zugewiesen werden soll.</param>
      <param name="value">Der anzuzeigende Text.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String)">
      <summary>Gibt ein HTML-Textsteuerelement mit dem angegebenen Namen zurück.</summary>
      <returns>Das HTML-Markup, das das Textsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object)">
      <summary>Gibt ein HTML-Textsteuerelement mit dem angegebenen Namen und Wert zurück.</summary>
      <returns>Das HTML-Markup, das das Textsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Textsteuerelement mit dem angegebenen Namen, dem Wert und den benutzerdefinierten Attributen zurück, die durch ein Attributwörterbuch definiert werden.</summary>
      <returns>Das HTML-Markup, das das Textsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object,System.Object)">
      <summary>Gibt ein HTML-Textsteuerelement mit dem angegebenen Namen, dem Wert und den benutzerdefinierten Attributen zurück, die durch ein Attributobjekt definiert werden.</summary>
      <returns>Das HTML-Markup, das das Textsteuerelement darstellt.</returns>
      <param name="name">Der Wert, der dem Attribut name des HTML-Steuerelements zugewiesen werden soll.</param>
      <param name="value">Der Wert, der dem Attribut value des Elements zugewiesen werden soll.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>Ruft einen Wert ab, der angibt, ob die Seite unaufdringliches JavaScript für AJAX-Funktionen verwendet, oder legt diesen Wert fest.</summary>
      <returns>true, wenn die Seite unaufdringliches JavaScript verwendet, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationInputCssClassName">
      <summary>Ruft den Namen der CSS-Klasse ab, die das Aussehen von input-Elementen definiert, wenn ein Überprüfungsfehler auftritt, oder legt diesen fest.</summary>
      <returns>Der Name der CSS-Klasse.Der Standardwert ist field-validation-error.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationInputValidCssClassName">
      <summary>Ruft den Namen der CSS-Klasse ab, die das Aussehen von input-Elementen definiert, wenn die Überprüfung bestanden wird, oder legt diesen fest.</summary>
      <returns>Der Name der CSS-Klasse.Der Standardwert ist input-validation-valid.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String)">
      <summary>Gibt ein HTML-Element span zurück, das die erste Überprüfungsfehlermeldung für das angegebene Formularfeld enthält.</summary>
      <returns>Wenn der Wert im angegebenen Feld gültig ist, null, andernfalls das HTML-Markup, das die Überprüfungsfehlermeldung darstellt, die dem angegebenen Feld zugeordnet ist.</returns>
      <param name="name">Der Name des Formulars, das validiert wurde.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Element span zurück, das die angegebenen durch ein Attributwörterbuch definierten benutzerdefinierten Attribute besitzt und die erste Überprüfungsfehlermeldung für das angegebene Formularfeld enthält.</summary>
      <returns>Wenn der Wert im angegebenen Feld gültig ist, null, andernfalls das HTML-Markup, das die Überprüfungsfehlermeldung darstellt, die dem angegebenen Feld zugeordnet ist.</returns>
      <param name="name">Der Name des Formulars, das validiert wurde.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.Object)">
      <summary>Gibt ein HTML-Element span zurück, das die angegebenen durch ein Attributobjekt definierten benutzerdefinierten Attribute besitzt und die erste Überprüfungsfehlermeldung für das angegebene Formularfeld enthält.</summary>
      <returns>Wenn der Wert im angegebenen Feld gültig ist, null, andernfalls das HTML-Markup, das die Überprüfungsfehlermeldung darstellt, die dem angegebenen Feld zugeordnet ist.</returns>
      <param name="name">Der Name des Formulars, das validiert wurde.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String)">
      <summary>Gibt ein HTML-Element span zurück, das eine Überprüfungsfehlermeldung für das angegebene Formularfeld enthält.</summary>
      <returns>Wenn der Wert im angegebenen Feld gültig ist, null, andernfalls das HTML-Markup, das die Überprüfungsfehlermeldung darstellt, die dem angegebenen Feld zugeordnet ist.</returns>
      <param name="name">Der Name des Formulars, das validiert wurde.</param>
      <param name="message">Die anzuzeigende Überprüfungsfehlermeldung.Wenn der Wert null ist, wird die erste Überprüfungsfehlermeldung angezeigt, die dem angegebenen Formularfeld zugeordnet ist.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Element span zurück, das die angegebenen durch ein Attributwörterbuch definierten benutzerdefinierten Attribute besitzt und eine Überprüfungsfehlermeldung für das angegebene Formularfeld enthält.</summary>
      <returns>Wenn das angegebene Feld gültig ist, null, andernfalls das HTML-Markup, das eine Überprüfungsfehlermeldung darstellt, die dem angegebenen Feld zugeordnet ist.</returns>
      <param name="name">Der Name des Formulars, das validiert wurde.</param>
      <param name="message">Die anzuzeigende Überprüfungsfehlermeldung.Wenn der Wert null ist, wird die erste Überprüfungsfehlermeldung angezeigt, die dem angegebenen Formularfeld zugeordnet ist.</param>
      <param name="htmlAttributes"> Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String,System.Object)">
      <summary>Gibt ein HTML-Element span zurück, das die angegebenen durch ein Attributobjekt definierten benutzerdefinierten Attribute besitzt und eine Überprüfungsfehlermeldung für das angegebene Formularfeld enthält.</summary>
      <returns>Wenn das angegebene Feld gültig ist, null, andernfalls das HTML-Markup, das eine Überprüfungsfehlermeldung darstellt, die dem angegebenen Feld zugeordnet ist.</returns>
      <param name="name">Der Name des Formulars, das validiert wurde.</param>
      <param name="message">Die anzuzeigende Überprüfungsfehlermeldung.Wenn der Wert null ist, wird die erste Überprüfungsfehlermeldung angezeigt, die dem angegebenen Formularfeld zugeordnet ist.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> ist null oder leer.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationMessageCssClassName">
      <summary>Ruft den Namen der CSS-Klasse ab, die das Aussehen von Überprüfungsfehlermeldungen definiert, wenn ein Überprüfungsfehler auftritt, oder legt diesen fest.</summary>
      <returns>Der Name der CSS-Klasse.Der Standardwert ist field-validation-error.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>Ruft den Namen der CSS-Klasse ab, die das Aussehen von Überprüfungsfehlermeldungen definiert, wenn die Überprüfung bestanden wird, oder legt diesen fest.</summary>
      <returns>Der Name der CSS-Klasse.Der Standardwert ist field-validation-valid.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary">
      <summary>Gibt ein HTML-Element div zurück, das eine ungeordnete Liste aller Überprüfungsfehlermeldungen aus dem Modellstatus-Wörterbuch enthält.</summary>
      <returns>Das HTML-Markup, das die Überprüfungsfehlermeldungen darstellt.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Boolean)">
      <summary>Gibt ein HTML-Element div zurück, das eine ungeordnete Liste der Überprüfungsfehlermeldungen aus dem Modellstatus-Wörterbuch enthält. Optional werden Fehler auf Feldebene ausgeschlossen.</summary>
      <returns>Das HTML-Markup, das die Überprüfungsfehlermeldungen darstellt.</returns>
      <param name="excludeFieldErrors">true, um Überprüfungsfehler auf Feldebene aus der Liste auszuschließen, false, um Überprüfungsfehler auf Modell- und auf Feldebene einzuschließen.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Element div zurück, das die angegebenen durch ein Attributwörterbuch definierten benutzerdefinierten Attribute besitzt und eine ungeordnete Liste aller Überprüfungsfehlermeldungen aus dem Modellstatus-Wörterbuch enthält.</summary>
      <returns>Das HTML-Markup, das die Überprüfungsfehlermeldungen darstellt.</returns>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Object)">
      <summary>Gibt ein HTML-Element div zurück, das die angegebenen durch ein Attributobjekt definierten benutzerdefinierten Attribute besitzt und eine ungeordnete Liste aller Überprüfungsfehlermeldungen aus dem Modellstatus-Wörterbuch enthält.</summary>
      <returns>Das HTML-Markup, das die Überprüfungsfehlermeldungen darstellt.</returns>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String)">
      <summary>Gibt ein HTML-Element div zurück, das eine Zusammenfassungsmeldung und ungeordnete Liste aller Überprüfungsfehlermeldungen aus dem Modellstatus-Wörterbuch enthält.</summary>
      <returns>Das HTML-Markup, das die Überprüfungsfehlermeldungen darstellt.</returns>
      <param name="message">Die Meldung vor der Liste der Überprüfungsfehlermeldungen.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Element div zurück, das die angegebenen durch ein Attributwörterbuch definierten benutzerdefinierten Attribute besitzt und eine Zusammenfassungsmeldung sowie eine ungeordnete Liste der Überprüfungsfehlermeldungen aus dem Modellstatus-Wörterbuch enthält. Optional werden Fehler auf Feldebene ausgeschlossen.</summary>
      <returns>Das HTML-Markup, das die Überprüfungsfehlermeldungen darstellt.</returns>
      <param name="message">Die Zusammenfassungsmeldung vor der Liste der Überprüfungsfehlermeldungen.</param>
      <param name="excludeFieldErrors">true, um Überprüfungsfehler auf Feldebene aus den Ergebnissen auszuschließen, false, um Überprüfungsfehler auf Modell- und auf Feldebene einzuschließen.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Boolean,System.Object)">
      <summary>Gibt ein HTML-Element div zurück, das die angegebenen durch ein Attributobjekt definierten benutzerdefinierten Attribute besitzt und eine Zusammenfassungsmeldung sowie eine ungeordnete Liste der Überprüfungsfehlermeldungen aus dem Modellstatus-Wörterbuch enthält. Optional werden Fehler auf Feldebene ausgeschlossen.</summary>
      <returns>Das HTML-Markup, das die Überprüfungsfehlermeldungen darstellt.</returns>
      <param name="message">Die Zusammenfassungsmeldung vor der Liste der Überprüfungsfehlermeldungen.</param>
      <param name="excludeFieldErrors">true, um Überprüfungsfehler auf Feldebene aus den Ergebnissen auszuschließen, false, um Überprüfungsfehler auf Feldebene einzuschließen.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein HTML-Element div zurück, das die angegebenen durch ein Attributwörterbuch definierten benutzerdefinierten Attribute besitzt und eine Zusammenfassungsmeldung sowie eine ungeordnete Liste aller Überprüfungsfehlermeldungen aus dem Modellstatus-Wörterbuch enthält.</summary>
      <returns>Das HTML-Markup, das die Überprüfungsfehlermeldungen darstellt.</returns>
      <param name="message">Die Meldung vor der Liste der Überprüfungsfehlermeldungen.</param>
      <param name="htmlAttributes">Die Namen und Werte benutzerdefinierter Attribute für das Element.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Object)">
      <summary>Gibt ein HTML-Element div zurück, das die angegebenen durch ein Attributobjekt definierten benutzerdefinierten Attribute besitzt und eine Zusammenfassungsmeldung sowie eine ungeordnete Liste aller Überprüfungsfehlermeldungen aus dem Modellstatus-Wörterbuch enthält.</summary>
      <returns>Das HTML-Markup, das die Überprüfungsfehlermeldungen darstellt.</returns>
      <param name="message">Die Zusammenfassungsmeldung vor der Liste der Überprüfungsfehlermeldungen.</param>
      <param name="htmlAttributes">Ein Objekt, das benutzerdefinierte Attribute für das Element enthält.Die Attributnamen und -werte werden durch Reflektion durch Untersuchen der Eigenschaften des Objekts abgerufen.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationSummaryClass">
      <summary>Ruft den Namen der CSS-Klasse ab, die das Aussehen einer Überprüfungszusammenfassung definiert, wenn ein Überprüfungsfehler auftritt, oder legt diesen fest.</summary>
      <returns>Der Name der CSS-Klasse.Der Standardwert ist validation-summary-errors.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationSummaryValidClass">
      <summary>Ruft den Namen der CSS-Klasse ab, die das Aussehen einer Überprüfungszusammenfassung definiert, wenn die Überprüfung bestanden wird, oder legt diesen fest.</summary>
      <returns>Der Name der CSS-Klasse.Der Standardwert ist validation-summary-valid.</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.ModelState">
      <summary>Kapselt den Zustand der Modellbindung an eine Eigenschaft eines Aktionsmethodenarguments bzw. an das Argument selbst.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelState.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.Html.ModelState" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelState.Errors">
      <summary>Gibt eine Liste mit Zeichenfolgen zurück, die alle Fehler enthält, die während der Modellbindung aufgetreten sind.</summary>
      <returns>Die Fehler, die während der Modellbindung aufgetreten sind.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelState.Value">
      <summary>Gibt ein Objekt zurück, das den Wert kapselt, der während der Modellbindung gebunden wurde.</summary>
      <returns>Der Wert, der gebunden wurde.</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.ModelStateDictionary">
      <summary>Stellt das Ergebnis der Bindung eines bereitgestellten Formulars an eine Aktionsmethode dar, das Informationen wie etwa den Überprüfungsstatus und Überprüfungsfehlermeldungen umfasst.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.#ctor(System.Web.WebPages.Html.ModelStateDictionary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" />-Klasse mithilfe der Werte, die aus dem angegebenen Modellzustands-Wörterbuch kopiert werden.</summary>
      <param name="dictionary">Das Modellzustands-Wörterbuch, aus dem Werte kopiert werden.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>Fügt dem Modellzustands-Wörterbuch das angegebene Element hinzu.</summary>
      <param name="item">Das Element, das dem Modellzustands-Wörterbuch hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Add(System.String,System.Web.WebPages.Html.ModelState)">
      <summary>Fügt dem Modellzustands-Wörterbuch ein Element hinzu, das den angegebenen Schlüssel und Wert aufweist.</summary>
      <param name="key">Der Schlüssel.</param>
      <param name="value">Der Wert.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.AddError(System.String,System.String)">
      <summary>Fügt dem Modellzustand eine Fehlermeldung hinzu, die dem angegebenen Schlüssel zugeordnet ist.</summary>
      <param name="key">Der Schlüssel, der dem Modellzustand zugeordnet ist, dem die Fehlermeldung hinzugefügt wird.</param>
      <param name="errorMessage">Die Fehlermeldung.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.AddFormError(System.String)">
      <summary>Fügt dem Modellzustand eine Fehlermeldung hinzu, die dem gesamten Formular zugeordnet ist.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Clear">
      <summary>Entfernt alle Elemente aus dem Modellzustands-Wörterbuch .</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>Bestimmt, ob das Modellzustands-Wörterbuch das angegebene Element enthält.</summary>
      <returns>true, wenn das Modellzustands-Wörterbuch das angegebene Element enthält, andernfalls false.</returns>
      <param name="item">Das zu suchende Element.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Bestimmt, ob das Modellzustands-Wörterbuch den angegebenen Schlüssel enthält.</summary>
      <returns>true, wenn das Modellzustands-Wörterbuch den angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der zu suchende Schlüssel.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState}[],System.Int32)">
      <summary>Kopiert die Elemente des Modellzustands-Wörterbuchs beginnend am angegebenen Index in ein Array.</summary>
      <param name="array">Die eindimensionale <see cref="T:System.Array" />-Instanz, in die die Elemente kopiert werden.</param>
      <param name="arrayIndex">Der Index in <paramref name="array" />, an dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Count">
      <summary>Ruft die Anzahl der Modellzustände ab, die das Modellzustands-Wörterbuch enthält.</summary>
      <returns>Die Anzahl der Modellzustände, die das Modellzustands-Wörterbuch enthält.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der zum Iterieren durch die Auflistung verwendet werden kann.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das Modellzustands-Wörterbuch schreibgeschützt ist.</summary>
      <returns>true, wenn das Modellzustands-Wörterbuch schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.IsValid">
      <summary>Ruft einen Wert ab, der angibt, ob einem Modellzustand im Modellzustands-Wörterbuch Fehlermeldungen zugeordnet sind.</summary>
      <returns>true, wenn Fehlermeldungen einem Modellzustand im Wörterbuch zugeordnet sind, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.IsValidField(System.String)">
      <summary>Legt fest, ob dem angegebenen Schlüssel Fehlermeldungen zugeordnet sind.</summary>
      <returns>true, wenn dem angegebenen Schlüssel keine Fehlermeldungen zugeordnet sind, andernfalls false.</returns>
      <param name="key">Der Schlüssel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Item(System.String)">
      <summary>Ruft den Wert des Modellzustands ab, der dem angegebenen Schlüssel im Modellzustand zugeordnet ist, oder legt diesen Wert fest.</summary>
      <returns>Der Modellzustand, der dem angegebenen Schlüssel im Wörterbuch zugeordnet ist.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Keys">
      <summary>Ruft eine Liste ab, die die Schlüssel im Modellzustands-Wörterbuch enthält.</summary>
      <returns>Die Liste der Schlüssel im Wörterbuch.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Merge(System.Web.WebPages.Html.ModelStateDictionary)">
      <summary>Kopiert die Werte aus dem angegebenen Modellzustands-Wörterbuch in diese <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" />-Instanz und überschreibt dabei vorhandene Werte, wenn Schlüssel identisch sind.</summary>
      <param name="dictionary">Das Modellzustands-Wörterbuch, aus dem Werte kopiert werden.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>Entfernt das erste Vorkommen des angegebenen Elements aus dem Modellzustands-Wörterbuch.</summary>
      <returns>true, wenn das Element erfolgreich aus dem Modellzustands-Wörterbuch entfernt wurde, false, wenn das Element nicht entfernt wurde oder das Element nicht im Modellzustands-Wörterbuch vorhanden ist.</returns>
      <param name="item">Das zu entfernende Element.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Remove(System.String)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus dem Modellzustands-Wörterbuch.</summary>
      <returns>true, wenn das Element erfolgreich aus dem Modellzustands-Wörterbuch entfernt wurde, false, wenn das Element nicht entfernt wurde oder nicht im Modellzustands-Wörterbuch vorhanden ist.</returns>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.SetModelValue(System.String,System.Object)">
      <summary>Legt den Wert des Modellzustands fest, der dem angegebenen Schlüssel zugeordnet ist.</summary>
      <param name="key">Der Schlüssel, dessen Wert festgelegt werden soll.</param>
      <param name="value">Der Wert, auf den der Schlüssel festgelegt werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der zum Iterieren durch das Modellzustands-Wörterbuch verwendet werden kann.</summary>
      <returns>Ein Enumerator, der zum Iterieren durch das Modellzustands-Wörterbuch verwendet werden kann.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.TryGetValue(System.String,System.Web.WebPages.Html.ModelState@)">
      <summary>Ruft den Wert des Modellzsutands ab, der dem angegebenen Schlüssel zugeordnet ist.</summary>
      <returns>true, wenn das Modellzustands-Wörterbuch ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der Schlüssel, dessen Wert abgerufen werden soll.</param>
      <param name="value">Wenn der Schlüssel gefunden wurde, enthält der Rückgabewert dieser Methode den Modellzustandswert, der dem angegebenen Schlüssel zugeordnet ist, andernfalls enthält er den Standardwert für den Typ <see cref="T:System.Web.WebPages.Html.ModelState" />.Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Values">
      <summary>Ruft eine Liste ab, die die Werte im Modellzustands-Wörterbuch enthält.</summary>
      <returns>Die Liste der Werte im Wörterbuch.</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.SelectListItem">
      <summary>Stellt ein Element in einer HTML-Auswahlliste dar.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.SelectListItem.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Klasse mithilfe der Standardeinstellungen.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.SelectListItem.#ctor(System.Web.WebPages.Html.SelectListItem)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Klasse, indem das angegebene Auswahllistenelement kopiert wird.</summary>
      <param name="item">Das zu kopierende Auswahllistenelement.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Selected">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanz ausgewählt ist, oder legt diesen Wert fest.</summary>
      <returns>true, wenn das Auswahllistenelement ausgewählt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Text">
      <summary>Ruft den Text ab, der zum Anzeigen der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanz auf einer Webseite verwendet wird, oder legt diesen Text fest.</summary>
      <returns>Der Text, der zum Anzeigen des Auswahllistenelements verwendet wird.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Value">
      <summary>Ruft den Wert des HTML-Attributs value des HTML-Elements option ab, der der <see cref="T:System.Web.WebPages.Html.SelectListItem" />-Instanz zugeordnet ist, oder legt ihn fest.</summary>
      <returns>Der Wert des HTML-Attributs value, das dem Auswahllistenelement zugeordnet ist.</returns>
    </member>
    <member name="T:System.Web.WebPages.Instrumentation.InstrumentationService">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Stellt einen Instrumentationsdienst für Webseiten dar.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.#ctor">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.Instrumentation.InstrumentationService" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.BeginContext(System.Web.HttpContextBase,System.String,System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Wird aufgerufen, bevor die Ausgabe für den angegebenen Kontext gerendert wird.</summary>
      <param name="context">Der Kontext.</param>
      <param name="virtualPath">Der virtuelle Pfad.</param>
      <param name="writer">Der Writer.</param>
      <param name="startPosition">Die Startposition.</param>
      <param name="length">Die Länge des Kontexts.</param>
      <param name="isLiteral">Ermittelt, ob der Kontext ein Literal ist.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.EndContext(System.Web.HttpContextBase,System.String,System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Wird aufgerufen, nachdem die Ausgabe für den angegebenen Kontext gerendert wird.</summary>
      <param name="context">Der Kontext.</param>
      <param name="virtualPath">Der virtuelle Pfad.</param>
      <param name="writer">Der Writer.</param>
      <param name="startPosition">Die Startposition.</param>
      <param name="length">Die Länge des Kontexts.</param>
      <param name="isLiteral">Ermittelt, ob der Kontext ein Literal ist.</param>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.InstrumentationService.IsAvailable">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft einen Wert ab, der angibt, ob der Dienst verfügbar ist.</summary>
      <returns>true, wenn der Dienst verfügbar ist, andernfalls false.</returns>
    </member>
    <member name="T:System.Web.WebPages.Instrumentation.PositionTagged`1">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Stellt eine markierte Position dar.</summary>
      <typeparam name="T">Der Typ der Position.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.#ctor(`0,System.Int32)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />-Klasse.</summary>
      <param name="value">Der Wert dieser aktuellen Instanz.</param>
      <param name="offset">Der Offset.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.Equals(System.Object)">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ermittelt, ob das angegebene Objekt und das aktuelle Objekt gleich sind.</summary>
      <returns>true, wenn das angegebene Objekt und das aktuelle Objekt gleich sind, andernfalls false.</returns>
      <param name="obj">Das Objekt, mit dem verglichen werden soll.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.GetHashCode">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft den Hashcode der aktuellen Instanz ab.</summary>
      <returns>Der Hashcode der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Equality(System.Web.WebPages.Instrumentation.PositionTagged{`0},System.Web.WebPages.Instrumentation.PositionTagged{`0})">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Bestimmt, ob die beiden Objekte identisch sind.</summary>
      <returns>true, wenn die beiden Objekte identisch sind, andernfalls false.</returns>
      <param name="left">Das erste Objekt.</param>
      <param name="right">Das zweite Objekt.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Implicit(System.Tuple{`0,System.Int32})~System.Web.WebPages.Instrumentation.PositionTagged{`0}">
      <summary>Konvertiert das angegebene Objekt in ein <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />-Objekt.</summary>
      <returns>Das <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />-Objekt, das den konvertierten <paramref name="value" /> darstellt.</returns>
      <param name="value">Das zu konvertierende Objekt.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Implicit(System.Web.WebPages.Instrumentation.PositionTagged{`0})~`0">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Konvertiert <paramref name="value" /> in ein <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />-Objekt.</summary>
      <returns>Das <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />-Objekt, das den konvertierten <paramref name="value" /> darstellt.</returns>
      <param name="value">Das zu konvertierende Objekt.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Inequality(System.Web.WebPages.Instrumentation.PositionTagged{`0},System.Web.WebPages.Instrumentation.PositionTagged{`0})">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Bestimmt, ob die beiden Objekte nicht gleich sind.</summary>
      <returns>true, wenn die beiden Objekte nicht gleich sind, andernfalls false.</returns>
      <param name="left">Das erste Objekt.</param>
      <param name="right">Das zweite Objekt.</param>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.PositionTagged`1.Position">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft die Position ab bzw. legt die Position fest, die dem <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />-Objekt zugeordnet ist.</summary>
      <returns>Die Position, die dem <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />-Objekt zugeordnet ist.</returns>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.ToString">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Gibt eine Zeichenfolgendarstellung des <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />-Objekts zurück.</summary>
      <returns>Eine Zeichenfolge, die das <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />-Objekt darstellt.</returns>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.PositionTagged`1.Value">
      <summary>Dieser Typ bzw. dieses Element unterstützt die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.Ruft den Wert der aktuellen Instanz ab bzw. legt diesen fest.</summary>
      <returns>Der Wert der aktuellen Instanz.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider">
      <summary>Definiert einen ASP.NET-Speicheranbieter für den Anforderungsbereich.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.ApplicationScope">
      <summary>Ruft das Wörterbuch ab, das zum Speichern von Daten im Anwendungsbereich verwendet wird.</summary>
      <returns>Das Wörterbuch, das Daten im Anwendungsbereich speichert.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.CurrentScope">
      <summary>Ruft das Wörterbuch ab, das zum Speichern von Daten im aktuellen Bereich verwendet wird.</summary>
      <returns>Das Wörterbuch, das Daten des aktuellen Bereichs speichert.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.GlobalScope">
      <summary>Ruft das Wörterbuch ab, das zum Speichern von Daten im globalen Bereich verwendet wird.</summary>
      <returns>Das Wörterbuch, das Daten des globalen Bereichs speichert.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.RequestScope">
      <summary>Ruft das Wörterbuch ab, das zum Speichern von Daten im Anforderungsbereich verwendet wird.</summary>
      <returns>Das Wörterbuch, das Daten des Anforderungsbereichs speichert.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.IScopeStorageProvider">
      <summary>Definiert ein Wörterbuch, das bereichsbezogenen Zugriff auf Daten bereitstellt.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.IScopeStorageProvider.CurrentScope">
      <summary>Ruft das Wörterbuch ab, das zum Speichern von Daten im aktuellen Bereich verwendet wird, oder legt dieses fest.</summary>
      <returns>Das Wörterbuch, das Daten des aktuellen Bereichs speichert.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.IScopeStorageProvider.GlobalScope">
      <summary>Ruft das Wörterbuch ab, das zum Speichern von Daten im globalen Bereich verwendet wird.</summary>
      <returns>Das Wörterbuch, das Daten des globalen Bereichs speichert.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.ScopeStorage">
      <summary>Definiert eine Klasse, die den Speicher für einen kurzlebigen Bereich enthält.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorage.CreateTransientScope">
      <summary>Gibt ein Wörterbuch zurück, das zum Speichern von Daten in einem kurzlebigen Bereich basierend auf dem Bereich in der Eigenschaft <see cref="P:System.Web.WebPages.Scope.ScopeStorage.CurrentScope" /> verwendet wird.</summary>
      <returns>Das Wörterbuch, das Daten des kurzlebigen Bereichs speichert.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorage.CreateTransientScope(System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Gibt ein Wörterbuch zurück, das zum Speichern von Daten in einem kurzlebigen Bereich verwendet wird.</summary>
      <returns>Das Wörterbuch, das Daten des kurzlebigen Bereichs speichert.</returns>
      <param name="context">Der Kontext.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.CurrentProvider">
      <summary>Ruft den aktuellen Bereichsanbieter ab oder legt diesen fest.</summary>
      <returns>Der aktuelle Bereichsanbieter.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.CurrentScope">
      <summary>Ruft das Wörterbuch ab, das zum Speichern von Daten im aktuellen Bereich verwendet wird.</summary>
      <returns>Das Wörterbuch, das Daten des aktuellen Bereichs speichert.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.GlobalScope">
      <summary>Ruft das Wörterbuch ab, das zum Speichern von Daten im globalen Bereich verwendet wird.</summary>
      <returns>Das Wörterbuch, das Daten des globalen Bereichs speichert.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.ScopeStorageDictionary">
      <summary>Stellt eine Auflistung von Schlüsseln und Werten dar, die zum Speichern von Daten auf verschiedenen Bereichsebenen (lokal, global usw.) verwendet werden.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.#ctor(System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Klasse mithilfe des angegebenen Basisbereichs.</summary>
      <param name="baseScope">Der Basisbereich.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>Fügt dem <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Objekt mithilfe der angegebenen generischen Auflistung ein Schlüssel-Wert-Paar hinzu.</summary>
      <param name="item">Das Schlüssel-Wert-Paar.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Add(System.Object,System.Object)">
      <summary>Fügt dem <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Objekt den angegebenen Schlüssel und den angegebenen Wert hinzu.</summary>
      <param name="key">Der Schlüssel.</param>
      <param name="value">Der Wert.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BackingStore">
      <summary>Ruft das Wörterbuch ab, das die <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Objektdaten speichert.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope">
      <summary>Ruft den Basisbereich für das <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Objekt ab.</summary>
      <returns>Der Basisbereich für das <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Objekt.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Clear">
      <summary>Entfernt alle Schlüssel und Werte aus den verketteten <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekten.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>Gibt einen Wert zurück, der angibt, ob das angegebene Schlüssel-Wert-Paar im <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Objekt oder im <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekt vorhanden ist.</summary>
      <returns>true, wenn das <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Objekt oder das <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekt ein Element enthält, das das angegebene Schlüssel-Wert-Paar aufweist, andernfalls false.</returns>
      <param name="item">Das Schlüssel-Wert-Paar.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.ContainsKey(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob der angegebene Schlüssel im <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Objekt oder im <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekt vorhanden ist.</summary>
      <returns>true, wenn das <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Objekt oder das <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekt ein Element enthält, das den angegebenen Schlüssel aufweist, andernfalls false.</returns>
      <param name="key">Der Schlüssel.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)">
      <summary>Kopiert alle Elemente aus dem <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Objekt und dem <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekt beginnend am angegebenen Index in ein <see cref="T:System.Array" />-Objekt.</summary>
      <param name="array">Das Array.</param>
      <param name="arrayIndex">Der auf null basierende Index in <paramref name="array" />.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Count">
      <summary>Ruft die Anzahl der Schlüssel-Wert-Paare ab, die in den verketteten <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekten enthalten sind.</summary>
      <returns>Die Anzahl der Schlüssel-Wert-Paare.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der zum Iterieren durch die verketteten <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekte verwendet werden kann.</summary>
      <returns>Ein <see cref="T:System.Collections.Generic.IEnumerator" />-Objekt.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.GetItems">
      <summary>Gibt einen Enumerator zurück, der zum Iterieren durch die verschiedenen Elemente von verketteten <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekten verwendet werden kann.</summary>
      <returns>Ein Enumerator, der verschiedene Elemente aus verketteten Wörterbuchobjekten enthält.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Objekt schreibgeschützt ist.</summary>
      <returns>true, wenn das <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />-Objekt schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Item(System.Object)">
      <summary>Ruft den Wert des Elements ab, das dem angegebenen Schlüssel zugeordnet ist, oder legt diesen Wert fest.</summary>
      <returns>Das Element, das den angegebenen Schlüssel aufweist.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Keys">
      <summary>Ruft ein <see cref="T:System.Collections.Generic.List`1" />-Objekt ab, das die Schlüssel aus den verketteten <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekten enthält.</summary>
      <returns>Ein Objekt, das die Schlüssel enthält.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>Entfernt das angegebene Schlüssel-Wert-Paar aus den verketteten <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekten.</summary>
      <returns>true, wenn das Schlüssel-Wert-Paar entfernt wird, oder false, wenn <paramref name="item" /> in den verketteten <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekten nicht gefunden wurde.</returns>
      <param name="item">Das Schlüssel-Wert-Paar.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Remove(System.Object)">
      <summary>Entfernt den Wert mit dem angegebenen Schlüssel aus den verketteten <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekten.</summary>
      <returns>true, wenn das Schlüssel-Wert-Paar entfernt wird, oder false, wenn <paramref name="key" /> in den verketteten <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekten nicht gefunden wurde.</returns>
      <param name="key">Der Schlüssel.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.SetValue(System.Object,System.Object)">
      <summary>Legt einen Wert mithilfe des angegebenen Schlüssels in den verketteten <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekten fest.</summary>
      <param name="key">Der Schlüssel.</param>
      <param name="value">Der Wert.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator für die verketteten <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekte zurück.</summary>
      <returns>Der Enumerator.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.TryGetValue(System.Object,System.Object@)">
      <summary>Ruft den Wert, der dem angegebenen Schlüssel zugeordnet ist, aus den verketteten <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekten ab.</summary>
      <returns>true, wenn die <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekte ein Element enthalten, das den angegebenen Schlüssel aufweist, andernfalls false.</returns>
      <param name="key">Der Schlüssel.</param>
      <param name="value">Wenn der Schlüssel gefunden wurde, enthält der Rückgabewert dieser Methode den Wert, der dem angegebenen Schlüssel zugeordnet ist, andernfalls enthält er den Standardwert für den Typ des Parameters <paramref name="value" />.Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Values">
      <summary>Ruft ein <see cref="T:System.Collections.Generic.List`1" />-Objekt ab, das die Werte aus den verketteten <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />- und <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />-Objekten enthält.</summary>
      <returns>Das Objekt, das die Werte enthält.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.StaticScopeStorageProvider">
      <summary>Stellt bereichsbezogenen Zugriff auf statische Daten zur Verfügung.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.StaticScopeStorageProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.WebPages.Scope.StaticScopeStorageProvider" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.StaticScopeStorageProvider.CurrentScope">
      <summary>Ruft ein Wörterbuch ab, das aktuelle Daten unter einem statischen Kontext speichert, oder legt dieses fest.</summary>
      <returns>Das Wörterbuch, das aktuelle bereichsbezogene Daten bereitstellt.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.StaticScopeStorageProvider.GlobalScope">
      <summary>Ruft ein Wörterbuch ab, das globale Daten unter einem statischen Kontext speichert.</summary>
      <returns>Das Wörterbuch, das globale bereichsbezogene Daten bereitstellt.</returns>
    </member>
  </members>
</doc>